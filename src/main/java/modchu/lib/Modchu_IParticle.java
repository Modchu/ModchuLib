package modchu.lib;

import java.util.UUID;

public interface Modchu_IParticle {
	public Object superMultiplyVelocity(float par1);
	public Object superMultipleParticleScaleBy(float par1);
	public void superSetRBGColorF(float par1, float par2, float par3);
	public void superSetAlphaF(float par1);
	public float superGetRedColorF();
	public float superGetGreenColorF();
	public float superGetBlueColorF();
	public boolean superCanTriggerWalking();
	public void superEntityInit();
	public void superOnUpdate();
	public void superRenderParticle(Object tessellator, float par2, float par3, float par4, float par5, float par6, float par7);
	public int superGetFXLayer();
	public void superWriteEntityToNBT(Object nBTTagCompound);
	public void superReadEntityFromNBT(Object nBTTagCompound);
	public void superSetParticleIcon(Object icon);
	public void superSetParticleTextureIndex(int par1);
	public void superNextTextureIndexX();
	public boolean superCanBeAttackedWithItem();
	public String superToString();
	public Object superGetDataWatcher();
	public boolean superEquals(Object par1Obj);
	public int superHashCode();
	public void superPreparePlayerToSpawn();
	public void superSetDead();
	public void superSetSize(float par1, float par2);
	public void superSetRotation(float par1, float par2);
	public void superSetPosition(double par1, double par3, double par5);
	public void superSetAngles(float par1, float par2);
	public void superOnEntityUpdate();
	public int superGetMaxInPortalTime();
	public void superSetOnFireFromLava();
	public void superSetFire(int par1);
	public void superExtinguish();
	public void superKill();
	public boolean superIsOffsetPositionInLiquid(double par1, double par3, double par5);
	public void superMove(double par1, double par3, double par5);
	public void superDoBlockCollisions();
	public void superPlayStepSound(int par1, int par2, int par3, int par4);
	public void superPlayStepSound(int par1, int par2, int par3, Object par4);
	public void superPlaySound(String par1Str, float par2, float par3);
	public void superUpdateFallState(double par1, boolean par3);
	public Object superGetCollisionBoundingBox();
	public void superDealFireDamage(int par1);
	public void superFall(float par1);
	public boolean superIsWet();
	public boolean superIsInWater();
	public boolean superHandleWaterMovement();
	public boolean superIsInsideOfMaterial(Object material);
	public float superGetEyeHeight();
	public boolean superHandleLavaMovement();
	public void superMoveRelative(float par1, float par2, float par3);
	public int superGetBrightnessForRender(float par1);
	public float superGetBrightness(float par1);
	public void superSetWorld(Object world);
	public void superSetPositionAndRotation(double par1, double par3, double par5, float par7, float par8);
	public void superSetLocationAndAngles(double par1, double par3, double par5, float par7, float par8);
	public float superGetDistanceToEntity(Object entity);
	public double superGetDistanceSq(double par1, double par3, double par5);
	public double superGetDistance(double par1, double par3, double par5);
	public double superGetDistanceSqToEntity(Object entity);
	public void superOnCollideWithPlayer(Object entityPlayer);
	public void superApplyEntityCollision(Object entity);
	public void superAddVelocity(double par1, double par3, double par5);
	public void superSetBeenAttacked();
	public boolean superAttackEntityFrom(Object damageSource, float par2);
	public boolean superCanBeCollidedWith();
	public boolean superCanBePushed();
	public void superAddToPlayerScore(Object entity, int par2);
	public boolean superIsInRangeToRenderVec3D(Object vec3);
	public boolean superIsInRangeToRenderDist(double par1);
	public boolean superWriteMountToNBT(Object nBTTagCompound);
	public boolean superWriteToNBTOptional(Object nBTTagCompound);
	public void superWriteToNBT(Object nBTTagCompound);
	public void superReadFromNBT(Object nBTTagCompound);
	public boolean superShouldSetPosAfterLoading();
	public void superOnChunkLoad();
	public Object superNewDoubleNBTList(double... par1ArrayOfDouble);
	public Object superNewFloatNBTList(float... par1ArrayOfFloat);
	public float superGetShadowSize();
	public Object superDropItem(int par1, int par2);
	public Object superDropItem(Object par1, int par2);
	public Object superDropItemWithOffset(int par1, int par2, float par3);
	public Object superDropItemWithOffset(Object par1, int par2, float par3);
	public Object superEntityDropItem(Object itemStack, float par2);
	public boolean superIsEntityAlive();
	public boolean superIsEntityInsideOpaqueBlock();
	public boolean superInteractFirst(Object entityPlayer);
	public Object superGetCollisionBox(Object entity);
	public void superUpdateRidden();
	public void superUpdateRiderPosition();
	public double superGetYOffset();
	public double superGetMountedYOffset();
	public void superMountEntity(Object entity);
	public void superSetPositionAndRotationDirect(double par1, double par3, double par5, float par7, float par8, int par9);
	public float superGetCollisionBorderSize();
	public Object superGetLookVec();
	public void superSetPortal();
	public int superGetPortalCooldown();
	public void superSetVelocity(double par1, double par3, double par5);
	public void superHandleStatusUpdate(byte par1);
	public void superPerformHurtAnimation();
	public Object[] superGetInventory();
	public void superSetCurrentItemOrArmor(int par1, Object itemStack);
	public boolean superIsBurning();
	public boolean superIsRiding();
	public boolean superIsSneaking();
	public void superSetSneaking(boolean par1);
	public boolean superIsSprinting();
	public void superSetSprinting(boolean par1);
	public boolean superIsInvisible();
	public boolean superIsInvisibleToPlayer(Object entityPlayer);
	public void superSetInvisible(boolean par1);
	public boolean superIsEating();
	public void superSetEating(boolean par1);
	public boolean superGetFlag(int par1);
	public void superSetFlag(int par1, boolean par2);
	public int superGetAir();
	public void superSetAir(int par1);
	public void superOnStruckByLightning(Object entityLightningBolt);
	public void superOnKillEntity(Object entityLivingBase);
	public boolean superPushOutOfBlocks(double par1, double par3, double par5);
	public void superSetInWeb();
	public String superGetName();
	public Object[] superGetParts();
	public boolean superIsEntityEqual(Object entity);
	public float superGetRotationYawHead();
	public void superSetRotationYawHead(float par1);
	public boolean superHitByEntity(Object entity);
	public boolean superIsEntityInvulnerable();
	public void superCopyLocationAndAnglesFrom(Object entity);
	public void superCopyDataFromOld(Object entity, boolean par2);
	public void superTravelToDimension(int par1);
	public float superGetBlockExplosionResistance(Object explosion, Object world, int par3, int par4, int par5, Object block);
	public boolean superShouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);
	public boolean superShouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, Object par6, float par7);
	public int superGetMaxFallHeight();
	public Object superGetTeleportDirection();
	public boolean superDoesEntityNotTriggerPressurePlate();
	public void superAddEntityCrashInfo(Object crashReportCategory);
	public boolean superCanRenderOnFire();
	public UUID superGetUniqueID();
	public boolean superIsPushedByWater();
	public String superGetTranslatedEntityName();
	public Object superGetEntityData();
	public boolean superShouldRiderSit();
	public Object superGetPickedResult(Object movingObjectPosition);
	public UUID superGetPersistentID();
	public boolean superShouldRenderInPass(int pass);
	public boolean superIsCreatureType(Object enumCreatureType, boolean forSpawnCount);
	public String superRegisterExtendedProperties(String identifier, Object iExtendedEntityProperties);
	public Object superGetExtendedProperties(String identifier);
	public boolean superCanRiderInteract();
	public boolean superShouldDismountInWater(Object entity);
	// ~152
	public void superSetParticleIcon(Object renderEngine, Object icon);
	// 172~
	public int superGetEntityId();
	public void superSetEntityId(int p_145769_1_);
	public Object superGetSwimSound();
	public Object superGetSplashSound();
	public Object superGetDisplayName();
	public void superOnDataWatcherUpdate(int p_145781_1_);
	public boolean superIsInRangeToRender3d(double p_145770_1_, double p_145770_3_, double p_145770_5_);
	// 180~
	public void superCopyDataFromOld(Object entity);
	public void superRenderParticle(Object tessellator, Object entity, float par2, float par3, float par4, float par5, float par6, float par7);
	public void superUpdateFallState(double par1, boolean par3, Object block, Object blockPos);
	public void superFall(float par1, float damageMultiplier);
	public void superSetPositionAndRotationDirect(double par1, double par3, double par5, float par7, float par8, int par9, boolean b);
	public boolean superIsEntityInvulnerable(Object p_180431_1_);
	public void superPlayStepSound(Object blockPos, Object block);
	public float superGetBlockExplosionResistance(Object explosion, Object world, Object blockPos, Object iBlockState);
	public boolean superShouldExplodeBlock(Object explosion, Object world, Object blockPos, Object iBlockState, float par7);
	public void superSetPortal(Object blockPos);
	// 190~
	public boolean superIsTransparent();
	public void superSetMaxAge(int p_187114_1_);
	public void superSetParticleTexture(Object textureAtlasSprite);
	public void superSetExpired();
	public void superResetPositionToBB();
	public boolean superIsAlive();
	public Object superGetBoundingBox();
	public void superSetBoundingBox(Object axisAlignedBB);

}
