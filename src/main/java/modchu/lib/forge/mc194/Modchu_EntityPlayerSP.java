package modchu.lib.forge.mc194;import java.util.Collection;import java.util.HashMap;import java.util.List;import java.util.Random;import java.util.Set;import java.util.UUID;import com.mojang.authlib.GameProfile;import modchu.lib.Modchu_AS;import modchu.lib.Modchu_CastHelper;import modchu.lib.Modchu_Debug;import modchu.lib.Modchu_IEntityPlayerSP;import modchu.lib.Modchu_IEntityPlayerSPMaster;import modchu.lib.Modchu_Main;import net.minecraft.block.Block;import net.minecraft.block.material.EnumPushReaction;import net.minecraft.block.material.Material;import net.minecraft.block.state.IBlockState;import net.minecraft.client.Minecraft;import net.minecraft.client.entity.EntityPlayerSP;import net.minecraft.client.network.NetHandlerPlayClient;import net.minecraft.client.network.NetworkPlayerInfo;import net.minecraft.command.CommandResultStats;import net.minecraft.command.CommandResultStats.Type;import net.minecraft.crash.CrashReportCategory;import net.minecraft.entity.Entity;import net.minecraft.entity.EntityLivingBase;import net.minecraft.entity.EnumCreatureAttribute;import net.minecraft.entity.EnumCreatureType;import net.minecraft.entity.IMerchant;import net.minecraft.entity.SharedMonsterAttributes;import net.minecraft.entity.ai.attributes.AbstractAttributeMap;import net.minecraft.entity.ai.attributes.IAttribute;import net.minecraft.entity.ai.attributes.IAttributeInstance;import net.minecraft.entity.effect.EntityLightningBolt;import net.minecraft.entity.item.EntityItem;import net.minecraft.entity.passive.EntityHorse;import net.minecraft.entity.player.EntityPlayer;import net.minecraft.entity.player.EntityPlayerMP;import net.minecraft.entity.player.EnumPlayerModelParts;import net.minecraft.entity.player.InventoryPlayer;import net.minecraft.inventory.EntityEquipmentSlot;import net.minecraft.inventory.IInventory;import net.minecraft.inventory.InventoryEnderChest;import net.minecraft.item.Item;import net.minecraft.item.ItemStack;import net.minecraft.nbt.NBTTagCompound;import net.minecraft.nbt.NBTTagList;import net.minecraft.network.datasync.DataParameter;import net.minecraft.network.datasync.EntityDataManager;import net.minecraft.potion.Potion;import net.minecraft.potion.PotionEffect;import net.minecraft.scoreboard.Scoreboard;import net.minecraft.scoreboard.Team;import net.minecraft.server.MinecraftServer;import net.minecraft.stats.Achievement;import net.minecraft.stats.StatBase;import net.minecraft.stats.StatisticsManager;import net.minecraft.tileentity.CommandBlockBaseLogic;import net.minecraft.tileentity.TileEntityCommandBlock;import net.minecraft.tileentity.TileEntitySign;import net.minecraft.util.CombatTracker;import net.minecraft.util.CooldownTracker;import net.minecraft.util.DamageSource;import net.minecraft.util.EnumActionResult;import net.minecraft.util.EnumFacing;import net.minecraft.util.EnumHand;import net.minecraft.util.EnumHandSide;import net.minecraft.util.FoodStats;import net.minecraft.util.Mirror;import net.minecraft.util.ResourceLocation;import net.minecraft.util.Rotation;import net.minecraft.util.SoundCategory;import net.minecraft.util.SoundEvent;import net.minecraft.util.math.AxisAlignedBB;import net.minecraft.util.math.BlockPos;import net.minecraft.util.math.RayTraceResult;import net.minecraft.util.math.Vec3d;import net.minecraft.util.text.ITextComponent;import net.minecraft.util.text.event.HoverEvent;import net.minecraft.world.Explosion;import net.minecraft.world.IInteractionObject;import net.minecraft.world.LockCode;import net.minecraft.world.World;import net.minecraft.world.WorldSettings.GameType;import net.minecraftforge.common.capabilities.Capability;public class Modchu_EntityPlayerSP extends modchu.lib.forge.mc194_212.Modchu_EntityPlayerSP implements Modchu_IEntityPlayerSP {	public Modchu_EntityPlayerSP(HashMap<String, Object> map) {		super(map);	}	@Override	public void setGameType(GameType gameType) {		if (master != null) master.setGameType(gameType);		else super.setGameType(gameType);	}	@Override	public void superSetGameType(Object gameType) {		super.setGameType((GameType) gameType);	}	@Override	public void onChunkLoad() {		if (master != null) master.onChunkLoad();		else super.onChunkLoad();	}	@Override	public void superOnChunkLoad() {		super.onChunkLoad();	}	// 210~分離	@Override	public void addChatComponentMessage(ITextComponent ITextComponent) {		if (master != null) master.sendStatusMessage(ITextComponent, false);		else super.addChatComponentMessage(ITextComponent);	}	@Override	public void superSendStatusMessage(Object ITextComponent, boolean p_146105_2_) {		super.addChatComponentMessage((ITextComponent) ITextComponent);	}	@Override	public void openGuiHorseInventory(EntityHorse entityHorse, IInventory iInventory) {		if (master != null) master.openGuiHorseInventory(entityHorse, iInventory);		else super.openGuiHorseInventory(entityHorse, iInventory);	}	@Override	public EnumActionResult interact(Entity entity, ItemStack itemStack, EnumHand enumHand) {		return (EnumActionResult) (master != null ? master.interact(entity, itemStack, enumHand) : super.interact(entity, itemStack, enumHand));	}	@Override	public Object superInteract(Object entity, Object itemStack, Object enumHand) {		return super.interact((Entity) entity, (ItemStack) itemStack, (EnumHand) enumHand);	}	@Override	public void moveEntity(double x, double y, double z) {		if (master != null) master.move(null, x, y, z);		else super.moveEntity(x, y, z);	}	@Override	public void superMove(Object moverType, double x, double y, double z) {		super.moveEntity(x, y, z);	}	@Override	public boolean processInitialInteract(EntityPlayer entityPlayer, ItemStack itemStack, EnumHand enumHand) {		return master != null ? master.processInitialInteract(entityPlayer, itemStack, enumHand) : super.processInitialInteract(entityPlayer, itemStack, enumHand);	}	@Override	public boolean superProcessInitialInteract(Object entityPlayer, Object itemStack, Object enumHand) {		return super.processInitialInteract((EntityPlayer) entityPlayer, (ItemStack) itemStack, (EnumHand) enumHand);	}	@Override	public EnumActionResult applyPlayerInteraction(EntityPlayer entityPlayer, Vec3d vec3d, ItemStack itemStack, EnumHand enumHand) {		return (EnumActionResult) (master != null ? master.applyPlayerInteraction(entityPlayer, vec3d, itemStack, enumHand) : super.applyPlayerInteraction(entityPlayer, vec3d, itemStack, enumHand));	}	@Override	public EnumActionResult superApplyPlayerInteraction(Object entityPlayer, Object vec3d, Object itemStack, Object enumHand) {		return super.applyPlayerInteraction((EntityPlayer) entityPlayer, (Vec3d) vec3d, (ItemStack) itemStack, (EnumHand) enumHand);	}	@Override	public void addChatMessage(ITextComponent ITextComponent) {		if (master != null) master.sendMessage(ITextComponent);		else super.addChatMessage(ITextComponent);	}	@Override	public void superSendMessage(Object ITextComponent) {		super.addChatMessage((ITextComponent) ITextComponent);	}	@Override	public boolean canCommandSenderUseCommand(int permLevel, String commandName) {		return master != null ? master.canUseCommand(permLevel, commandName) : super.canCommandSenderUseCommand(permLevel, commandName);	}	@Override	public void setAngles(float yaw, float pitch) {		if (master != null) master.turn(yaw, pitch);		else super.setAngles(yaw, pitch);	}	@Override	public void superTurn(float yaw, float pitch) {		super.setAngles(yaw, pitch);	}}