package modchu.lib.forge.mc220_221;import java.util.HashMap;import java.util.List;import modchu.lib.Modchu_IGuiModelViewMaster;import net.minecraft.client.gui.GuiButton;import net.minecraft.item.ItemStack;public class Modchu_GuiModelView extends modchu.lib.forge.mc190_221.Modchu_GuiModelView {	public Modchu_GuiModelView(HashMap<String, Object> map) {
		super(map);
	}	@Override	public void superDrawString(String s, int i, int j, int k) {		super.drawString(fontRenderer, s, i, j, k);	}	public void setGuiSize(int w, int h) {		if (master != null) master.setGuiSize(w, h);		else super.setGuiSize(w, h);	}	@Override	public void superSetGuiSize(int w, int h) {		super.setGuiSize(w, h);	}	@Override	public <T extends GuiButton> T addButton(T buttonIn) {		return master != null ? ((T) master.addButton(buttonIn)) : super.addButton(buttonIn);	}	@Override	public Object superAddButton(Object buttonIn) {		return super.addButton((GuiButton) buttonIn);	}	public List<String> getItemToolTip(ItemStack itemStack) {		return master != null ? master.getItemToolTip(itemStack) : super.getItemToolTip(itemStack);	}	@Override	public List<String> superGetItemToolTip(Object itemStack) {		return super.getItemToolTip((ItemStack) itemStack);	}	public void setFocused(boolean hasFocusedControlIn) {		if (master != null) master.setFocused(hasFocusedControlIn);		else super.setFocused(hasFocusedControlIn);	}	@Override	public void superSetFocused(boolean hasFocusedControlIn) {		super.setFocused(hasFocusedControlIn);	}	public boolean isFocused() {		return master != null ? master.isFocused() : super.isFocused();	}	@Override	public boolean superIsFocused() {		return super.isFocused();	}}