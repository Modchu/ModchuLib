package modchu.lib.forge.mc180;import java.lang.reflect.Field;import java.util.Map;import modchu.lib.Modchu_AS;import modchu.lib.Modchu_CastHelper;import modchu.lib.Modchu_Debug;import modchu.lib.Modchu_Init;import modchu.lib.Modchu_Main;import modchu.lib.Modchu_Reflect;import modchu.lib.Modchu_Version;import modchu.lib.forge.mc180.Modchu_ForgeEVENTHandler;import modchu.lib.forge.mc180.Modchu_ThreadInit;import modchu.lib.forge.mc180.Modchu_TickHandler;import net.minecraftforge.common.MinecraftForge;import net.minecraftforge.fml.common.FMLCommonHandler;import net.minecraftforge.fml.common.Loader;import net.minecraftforge.fml.common.Mod;import net.minecraftforge.fml.common.Mod.EventHandler;import net.minecraftforge.fml.common.event.FMLInitializationEvent;import net.minecraftforge.fml.common.event.FMLMissingMappingsEvent;import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;@Mod(modid=Modchu_Version.modSimpleName, name=Modchu_Version.modName, version=Modchu_Version.modchulibVersionString)public class Modchu_ModchuLib {	public Modchu_ThreadInit loadCheckThread;	public static Modchu_ModchuLib instance;	static {		Modchu_Init.init();	}	public Modchu_ModchuLib() {		if (Modchu_Main.isServer) return;		instance = this;	}	public String getName() {		return Modchu_Version.modSimpleName;	}	public String getVersion() {		return Modchu_Version.modchulibForForgeVersionString;	}	@Mod.EventHandler	public void load(FMLInitializationEvent event) {		Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib load()");		FMLCommonHandler.instance().bus().register(new Modchu_TickHandler());		MinecraftForge.EVENT_BUS.register(new Modchu_ForgeEVENTHandler());		Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib load() end.");	}	@EventHandler	public void preInit(FMLPreInitializationEvent event) {		Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib preInit()");		Modchu_Main.load(this);		Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib preInit() end.");	}	@Mod.EventHandler	public void MissingMappingsEvent(FMLMissingMappingsEvent event){		event.applyModContainer(Loader.instance().activeModContainer());		for(FMLMissingMappingsEvent.MissingMapping mapping : event.get()){			Modchu_Reflect.invokeMethod(mapping.getClass(), "ignore", mapping);		}	}	@EventHandler	public void init(FMLInitializationEvent event) {		Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib init");		Modchu_Main.init(event);		if (Modchu_Main.isServer) return;		Map renderMap = Modchu_AS.get(Modchu_AS.renderManagerInstance) != null ? Modchu_AS.getMap(Modchu_AS.renderManagerEntityRenderMap) : null;		if (renderMap != null) Modchu_Main.addRenderer(renderMap);		else {			Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib init renderMap == null error !!");		}		loadCheckThread = new Modchu_ThreadInit();		loadCheckThread.start();		loadCheckThread.register(Modchu_Reflect.getMethod(getClass(), "initModsLoaded"));		Modchu_Debug.systemLogDebug("mod_Modchu_ModchuLib init end.");	}	public boolean onTickInGame(float f, Object minecraft) {		return Modchu_Main.onTickInGame(null, f, (Object) minecraft, (byte)0);	}	public void modsLoaded() {	}	public static void initModsLoaded() {		Modchu_Main.initModsLoadedStarting = true;		instance.loadCheckThread.yield();		instance.loadCheckThread = null;	}	public void keyboardEvent(Object keybinding) {		Modchu_Main.keyboardEvent(keybinding);	}	public void load() {	}}