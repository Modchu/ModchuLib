package modchu.lib.forge.mc180;import java.util.HashMap;import org.lwjgl.opengl.GL11;import modchu.lib.Modchu_AS;import modchu.lib.Modchu_IItemRenderer;import net.minecraft.client.Minecraft;import net.minecraft.client.entity.AbstractClientPlayer;import net.minecraft.client.entity.EntityPlayerSP;import net.minecraft.client.renderer.GlStateManager;import net.minecraft.client.renderer.RenderHelper;import net.minecraft.client.renderer.Tessellator;import net.minecraft.client.renderer.WorldRenderer;import net.minecraft.client.renderer.block.model.ItemCameraTransforms;import net.minecraft.client.renderer.block.model.ItemCameraTransforms.TransformType;import net.minecraft.client.renderer.entity.Render;import net.minecraft.client.renderer.entity.RenderPlayer;import net.minecraft.entity.EntityLivingBase;import net.minecraft.init.Items;import net.minecraft.item.EnumAction;import net.minecraft.item.ItemStack;import net.minecraft.util.MathHelper;import net.minecraft.world.storage.MapData;public class Modchu_ItemRenderer extends modchu.lib.forge.mc180_189.Modchu_ItemRenderer implements Modchu_IItemRenderer {	public Modchu_ItemRenderer(HashMap<String, Object> map) {		super(map);	}	protected void func_178095_a(AbstractClientPlayer p_178095_1_, float p_178095_2_, float p_178095_3_) {		float f2 = -0.3F * MathHelper.sin(MathHelper.sqrt_float(p_178095_3_) * (float) Math.PI);		float f3 = 0.4F * MathHelper.sin(MathHelper.sqrt_float(p_178095_3_) * (float) Math.PI * 2.0F);		float f4 = -0.4F * MathHelper.sin(p_178095_3_ * (float) Math.PI);		GlStateManager.translate(f2, f3, f4);		GlStateManager.translate(0.64000005F, -0.6F, -0.71999997F);		GlStateManager.translate(0.0F, p_178095_2_ * -0.6F, 0.0F);		GlStateManager.rotate(45.0F, 0.0F, 1.0F, 0.0F);		float f5 = MathHelper.sin(p_178095_3_ * p_178095_3_ * (float) Math.PI);		float f6 = MathHelper.sin(MathHelper.sqrt_float(p_178095_3_) * (float) Math.PI);		GlStateManager.rotate(f6 * 70.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.rotate(f5 * -20.0F, 0.0F, 0.0F, 1.0F);		Minecraft.getMinecraft().getTextureManager().bindTexture(p_178095_1_.getLocationSkin());		GlStateManager.translate(-1.0F, 3.6F, 3.5F);		GlStateManager.rotate(120.0F, 0.0F, 0.0F, 1.0F);		GlStateManager.rotate(200.0F, 1.0F, 0.0F, 0.0F);		GlStateManager.rotate(-135.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.scale(1.0F, 1.0F, 1.0F);		GlStateManager.translate(5.6F, 0.0F, 0.0F);		Render render = Minecraft.getMinecraft().getRenderManager().getEntityRenderObject(Minecraft.getMinecraft().thePlayer);		RenderPlayer renderplayer = (RenderPlayer) render;		renderplayer.func_177138_b(Minecraft.getMinecraft().thePlayer);	}	protected void func_178097_a(AbstractClientPlayer p_178097_1_, float p_178097_2_, float p_178097_3_, float p_178097_4_) {		float f3 = -0.4F * MathHelper.sin(MathHelper.sqrt_float(p_178097_4_) * (float)Math.PI);		float f4 = 0.2F * MathHelper.sin(MathHelper.sqrt_float(p_178097_4_) * (float)Math.PI * 2.0F);		float f5 = -0.2F * MathHelper.sin(p_178097_4_ * (float)Math.PI);		GlStateManager.translate(f3, f4, f5);		float f6 = func_178100_c(p_178097_2_);		GlStateManager.translate(0.0F, 0.04F, -0.72F);		GlStateManager.translate(0.0F, p_178097_3_ * -1.2F, 0.0F);		GlStateManager.translate(0.0F, f6 * -0.5F, 0.0F);		GlStateManager.rotate(90.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.rotate(f6 * -85.0F, 0.0F, 0.0F, 1.0F);		GlStateManager.rotate(0.0F, 1.0F, 0.0F, 0.0F);		renderPlayerArms(p_178097_1_);		float f7 = MathHelper.sin(p_178097_4_ * p_178097_4_ * (float)Math.PI);		float f8 = MathHelper.sin(MathHelper.sqrt_float(p_178097_4_) * (float)Math.PI);		GlStateManager.rotate(f7 * -20.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.rotate(f8 * -20.0F, 0.0F, 0.0F, 1.0F);		GlStateManager.rotate(f8 * -80.0F, 1.0F, 0.0F, 0.0F);		GlStateManager.scale(0.38F, 0.38F, 0.38F);		GlStateManager.rotate(90.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.rotate(180.0F, 0.0F, 0.0F, 1.0F);		GlStateManager.rotate(0.0F, 1.0F, 0.0F, 0.0F);		GlStateManager.translate(-1.0F, -1.0F, 0.0F);		GlStateManager.scale(0.015625F, 0.015625F, 0.015625F);		Minecraft.getMinecraft().getTextureManager().bindTexture(RES_MAP_BACKGROUND);		Tessellator tessellator = Tessellator.getInstance();		WorldRenderer worldrenderer = tessellator.getWorldRenderer();		GL11.glNormal3f(0.0F, 0.0F, -1.0F);		worldrenderer.startDrawingQuads();		worldrenderer.addVertexWithUV(-7.0D, 135.0D, 0.0D, 0.0D, 1.0D);		worldrenderer.addVertexWithUV(135.0D, 135.0D, 0.0D, 1.0D, 1.0D);		worldrenderer.addVertexWithUV(135.0D, -7.0D, 0.0D, 1.0D, 0.0D);		worldrenderer.addVertexWithUV(-7.0D, -7.0D, 0.0D, 0.0D, 0.0D);		tessellator.draw();		MapData mapdata = Items.filled_map.getMapData(itemToRender, Minecraft.getMinecraft().theWorld);		if (mapdata != null)		{			Minecraft.getMinecraft().entityRenderer.getMapItemRenderer().func_148250_a(mapdata, false);		}	}	@Override	public void renderItemInFirstPersonNomal(float par1) {		float f1 = 1.0F - (prevEquippedProgress + (equippedProgress - prevEquippedProgress) * par1);		EntityPlayerSP entityplayersp = (EntityPlayerSP) Modchu_AS.get(Modchu_AS.minecraftPlayer);		float f2 = entityplayersp.getSwingProgress(par1);		float f3 = entityplayersp.prevRotationPitch + (entityplayersp.rotationPitch - entityplayersp.prevRotationPitch) * par1;		float f4 = entityplayersp.prevRotationYaw + (entityplayersp.rotationYaw - entityplayersp.prevRotationYaw) * par1;		func_178101_a(f3, f4);		func_178109_a(entityplayersp);		func_178110_a(entityplayersp, par1);		GlStateManager.enableRescaleNormal();		GlStateManager.pushMatrix();		if (itemToRender != null) {			if (itemToRender.getItem() == Items.filled_map) {				func_178097_a(entityplayersp, f3, f1, f2);			} else if (entityplayersp.getItemInUseCount() > 0) {				EnumAction enumaction = itemToRender.getItemUseAction();				switch (SwitchEnumAction.field_178094_a[enumaction.ordinal()]) {				case 1:					transformFirstPersonItem(f1, 0.0F);					break;				case 2:				case 3:					func_178104_a(entityplayersp, par1);					transformFirstPersonItem(f1, 0.0F);					break;				case 4:					transformFirstPersonItem(f1, 0.0F);					func_178103_d();					break;				case 5:					transformFirstPersonItem(f1, 0.0F);					func_178098_a(par1, entityplayersp);				}			} else {				func_178105_d(f2);				transformFirstPersonItem(f1, f2);			}			renderItem(entityplayersp, itemToRender, ItemCameraTransforms.TransformType.FIRST_PERSON);		} else if (!entityplayersp.isInvisible()) {			//func_178095_a(entityplayersp, f1, f2);			master.renderItemInFirstPerson(par1, equippedProgress, prevEquippedProgress);		}		GlStateManager.popMatrix();		GlStateManager.disableRescaleNormal();		RenderHelper.disableStandardItemLighting();	}	@Override	protected void renderRightArm(RenderPlayer p_180534_1_) {		GlStateManager.pushMatrix();		GlStateManager.rotate(54.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.rotate(64.0F, 1.0F, 0.0F, 0.0F);		GlStateManager.rotate(-62.0F, 0.0F, 0.0F, 1.0F);		GlStateManager.translate(0.25F, -0.85F, 0.75F);		p_180534_1_.func_177138_b(Minecraft.getMinecraft().thePlayer);		GlStateManager.popMatrix();	}	@Override	protected void func_178106_b(RenderPlayer p_178106_1_) {		GlStateManager.pushMatrix();		GlStateManager.rotate(92.0F, 0.0F, 1.0F, 0.0F);		GlStateManager.rotate(45.0F, 1.0F, 0.0F, 0.0F);		GlStateManager.rotate(41.0F, 0.0F, 0.0F, 1.0F);		GlStateManager.translate(-0.3F, -1.1F, 0.45F);		p_178106_1_.func_177139_c(Minecraft.getMinecraft().thePlayer);		GlStateManager.popMatrix();	}	@Override	public void renderItem(EntityLivingBase entityLivingBase, ItemStack itemStack, TransformType transformType) {		if (master != null) master.renderItem(entityLivingBase, itemStack, transformType);		else super.renderItem(entityLivingBase, itemStack, transformType);	}	@Override	public void superRenderItem(Object entityLivingBase, Object itemStack, Object transformType) {		super.renderItem((EntityLivingBase) entityLivingBase, (ItemStack) itemStack, (TransformType) transformType);	}	@Override	public void renderOverlays(float partialTicks) {		if (master != null) master.renderOverlays(partialTicks);		else super.renderOverlays(partialTicks);	}	@Override	public void superRenderOverlays(float partialTicks) {		super.renderOverlays(partialTicks);	}	@Override	public void updateEquippedItem() {		if (master != null) master.updateEquippedItem();		else super.updateEquippedItem();	}	@Override	public void superUpdateEquippedItem() {		super.updateEquippedItem();	}	@Override	public void resetEquippedProgress() {		if (master != null) master.resetEquippedProgress();		else super.resetEquippedProgress();	}	@Override	public void superResetEquippedProgress() {		super.resetEquippedProgress();	}	@Override	public void resetEquippedProgress2() {		if (master != null) master.resetEquippedProgress2();		else super.resetEquippedProgress2();	}	@Override	public void superResetEquippedProgress2() {		super.resetEquippedProgress2();	}}