package modchu.lib;

import java.util.UUID;

public interface Modchu_IEntityTameableMaster extends Modchu_IEntityLivingMaster {
	public void attackEntity(Object entity, float f);
	public Object createChild(Object entityanimal);
	public Object findPlayerToAttack();
	public Object getOwner();
	public Object getOwnerName();
	public Object getResourceLocation();
	public int getTextureColor();
	public boolean isAngry();
	public boolean isBreedingItem(Object par1ItemStack);
	public boolean isInLove();
	public boolean isMovementCeased();
	public boolean isSitting();
	public boolean isStanding();
	public boolean isTamed();
	public void playTameEffect(boolean par1);
	public void resetInLove();
	public void setAngry(boolean flag);
	public void setOwner(Object uUIDOrString);
	public void setSitting(boolean flag);
	public void setStanding(boolean flag);
	public void setTamed(boolean flag);
	public void setTextureColor(int i);
	public void setResourceLocation(Object resourceLocation);
	public boolean shouldAttackEntity(Object entityLivingBase, Object entityLivingBase2);
	public float getBlockPathWeight(int par1, int par2, int par3);
	public void setInLove(Object entityPlayer);
	public Object getPlayerInLove();
	public boolean canMateWith(Object entityAnimal);
	public int getGrowingAge();
	public void addGrowth(int par1);
	public void setGrowingAge(int par1);
	public void setScaleForAge(boolean par1);
	public void updateWanderPath();
	public boolean hasPath();
	public void setPathToEntity(Object pathEntity);
	public Object getEntityToAttack();
	public void setTarget(Object entity);
	public boolean isWithinHomeDistanceFromPosition(Object blockPos);
	public void updateLeashedState();
	public void func_142017_o(float par1);
	public Object getDropItem();
	public Object func_130225_q(int par1);
	public void enchantEquipment();
	public Object onInitialSpawn(Object iEntityLivingData);
	public Object onInitialSpawn(Object difficultyInstance, Object iEntityLivingData);
	public void enablePersistence();
	public boolean hasCustomNameTag();
	public void setDropChance(Object entityEquipmentSlotOrInt, float par2);
	public void clearLeashed(boolean par1, boolean par2);
	public boolean canBeLeashedTo();
	public boolean getLeashed();
	public Object getLeashedToEntity();
	public void setLeashedToEntity(Object entity, boolean par2);
	public boolean isNotColliding();
	public void copyDataFrom(Object entity);
	public Object getAISit();
	public Object func_130012_q();
	public void func_110196_bT();
	public boolean func_110176_b(int par1, int par2, int par3);
	public float getBlockPathWeight(Object blockPos);
	//public String func_152113_b();
	public void func_152115_b(String par1Str);
	public String func_146067_o(int p_146067_1_);
	public Object getLivingSound();
	public boolean processInteract(Object entityPlayer);
	public int getDropItemId();
	public boolean isWithinHomeDistanceCurrentPosition();
	// ~152
	public int getHealthInt();
	// 180~
	public void setupTamedAI();
	public boolean isOwner(Object entityLivingBase);
	public void consumeItemFromStack(Object entityPlayer, Object itemStack);
	public void func_175501_a(int p_175501_1_, boolean p_175501_2_);
	public void onGrowingAdult();
	public void setHomePosAndDistance(Object blockPos, int distance);
	public Object getNewNavigator(Object world);
	public void updateEquipmentIfNeeded(Object entityItem);
	public boolean func_175448_a(Object itemStack);
	public void setEquipmentBasedOnDifficulty(Object difficultyInstance);
	public void setEnchantmentBasedOnDifficulty(Object difficultyInstance);
	public boolean isAIDisabled();
	public String getCommandSenderName();
	// 190~
	public boolean processInteract(Object entityPlayer, Object enumHand, Object itemStack);
	public float getPathPriority(Object pathNodeType);
	public void initEntityAI();
	public void setPathPriority(Object pathNodeType, float p_184644_2_);
	public Object createBodyHelper();
	public Object getLootTable();
	public void setMoveStrafing(float p_184646_1_);
	public int func_184649_cE();
	public Object getPrimaryHand();
	public void setLeftHanded(boolean p_184641_1_);
	public boolean isLeftHanded();
	public Object getTeleportDirection();

}
