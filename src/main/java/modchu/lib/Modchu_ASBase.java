package modchu.lib;

import java.io.File;
import java.io.InputStream;
import java.nio.IntBuffer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public abstract class Modchu_ASBase implements Modchu_ASC {

	public abstract Object getB(Object o, String s1, Object pArg);
	public abstract Object getB(Object o, String s1, Object[] pArg);
	public abstract Object getB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract Object getB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract boolean getBooleanB(Object o, String s1, Object pArg);
	public abstract boolean getBooleanB(Object o, String s1, Object[] pArg);
	public abstract boolean getBooleanB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract boolean getBooleanB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract float getFloatB(Object o, String s1, Object pArg);
	public abstract float getFloatB(Object o, String s1, Object[] pArg);
	public abstract float getFloatB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract float getFloatB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract double getDoubleB(Object o, String s1, Object pArg);
	public abstract double getDoubleB(Object o, String s1, Object[] pArg);
	public abstract double getDoubleB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract double getDoubleB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract int getIntB(Object o, String s1, Object pArg);
	public abstract int getIntB(Object o, String s1, Object[] pArg);
	public abstract int getIntB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract int getIntB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract long getLongB(Object o, String s1, Object pArg);
	public abstract long getLongB(Object o, String s1, Object[] pArg);
	public abstract long getLongB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract long getLongB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract byte getByteB(Object o, String s1, Object pArg);
	public abstract byte getByteB(Object o, String s1, Object[] pArg);
	public abstract byte getByteB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract byte getByteB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract String getStringB(Object o, String s1, Object pArg);
	public abstract String getStringB(Object o, String s1, Object[] pArg);
	public abstract String getStringB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract String getStringB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract List getListB(Object o, String s1, Object pArg);
	public abstract List getListB(Object o, String s1, Object[] pArg);
	public abstract List getListB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract List getListB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract ArrayList getArrayListB(Object o, String s1, Object pArg);
	public abstract ArrayList getArrayListB(Object o, String s1, Object[] pArg);
	public abstract ArrayList getArrayListB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract ArrayList getArrayListB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract LinkedList getLinkedListB(Object o, String s1, Object pArg);
	public abstract LinkedList getLinkedListB(Object o, String s1, Object[] pArg);
	public abstract LinkedList getLinkedListB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract LinkedList getLinkedListB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract Enum getEnumB(Object o, String s1, Object pArg);
	public abstract Enum getEnumB(Object o, String s1, Object[] pArg);
	public abstract Enum getEnumB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract Enum getEnumB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Object o, String s1, Object pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Object o, String s1, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract HashMap getHashMapB(Object o, String s1, Object pArg);
	public abstract HashMap getHashMapB(Object o, String s1, Object[] pArg);
	public abstract HashMap getHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract HashMap getHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract Map getMapB(Object o, String s1, Object pArg);
	public abstract Map getMapB(Object o, String s1, Object[] pArg);
	public abstract Map getMapB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract Map getMapB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract File getFileB(Object o, String s1, Object pArg);
	public abstract File getFileB(Object o, String s1, Object[] pArg);
	public abstract File getFileB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract File getFileB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Object o, String s1, Object pArg);
	public abstract IntBuffer getIntBufferB(Object o, String s1, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract IntBuffer getIntBufferB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract InputStream getInputStreamB(Object o, String s1, Object pArg);
	public abstract InputStream getInputStreamB(Object o, String s1, Object[] pArg);
	public abstract InputStream getInputStreamB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract InputStream getInputStreamB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract int[] getIntArrayB(Object o, String s1, Object pArg);
	public abstract int[] getIntArrayB(Object o, String s1, Object[] pArg);
	public abstract int[] getIntArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract int[] getIntArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract float[] getFloatArrayB(Object o, String s1, Object pArg);
	public abstract float[] getFloatArrayB(Object o, String s1, Object[] pArg);
	public abstract float[] getFloatArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract float[] getFloatArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract double[] getDoubleArrayB(Object o, String s1, Object pArg);
	public abstract double[] getDoubleArrayB(Object o, String s1, Object[] pArg);
	public abstract double[] getDoubleArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract double[] getDoubleArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract byte[] getByteArrayB(Object o, String s1, Object pArg);
	public abstract byte[] getByteArrayB(Object o, String s1, Object[] pArg);
	public abstract byte[] getByteArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract byte[] getByteArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract String[] getStringArrayB(Object o, String s1, Object pArg);
	public abstract String[] getStringArrayB(Object o, String s1, Object[] pArg);
	public abstract String[] getStringArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract String[] getStringArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract Object getObjectArrayB(Object o, String s1, Object pArg);
	public abstract Object[] getObjectArrayB(Object o, String s1, Object[] pArg);
	public abstract Object getObjectArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract Object[] getObjectArrayB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);
	public abstract boolean setB(Object o, String s1, Object pArg);
	public abstract boolean setB(Object o, String s1, Object[] pArg);
	public abstract boolean setB(Modchu_ASBase accessSupport, Object o, String s1, Object pArg);
	public abstract boolean setB(Modchu_ASBase accessSupport, Object o, String s1, Object[] pArg);

	public abstract Object getB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract Object getB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract boolean getBooleanB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract boolean getBooleanB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract float getFloatB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract float getFloatB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract double getDoubleB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract double getDoubleB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract int getIntB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract int getIntB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract long getLongB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract long getLongB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract byte getByteB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract byte getByteB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract String getStringB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract String getStringB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract List getListB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract List getListB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract ArrayList getArrayListB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract ArrayList getArrayListB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract LinkedList getLinkedListB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract LinkedList getLinkedListB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract Enum getEnumB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract Enum getEnumB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract HashMap getHashMapB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract HashMap getHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract Map getMapB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract Map getMapB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract File getFileB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract File getFileB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract InputStream getInputStreamB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract InputStream getInputStreamB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract int[] getIntArrayB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract int[] getIntArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract float[] getFloatArrayB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract float[] getFloatArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract double[] getDoubleArrayB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract double[] getDoubleArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract byte[] getByteArrayB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract byte[] getByteArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract String[] getStringArrayB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract String[] getStringArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract Object[] getObjectArrayB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract Object[] getObjectArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);
	public abstract boolean setB(Object o, String s1, Class[] c, Object[] pArg);
	public abstract boolean setB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object[] pArg);

	public abstract Object getB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Object getB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract boolean getBooleanB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract boolean getBooleanB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract float getFloatB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract float getFloatB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract double getDoubleB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract double getDoubleB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract int getIntB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract int getIntB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract long getLongB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract long getLongB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract byte getByteB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract byte getByteB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract String getStringB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract String getStringB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract List getListB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract List getListB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract ArrayList getArrayListB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract ArrayList getArrayListB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract LinkedList getLinkedListB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract LinkedList getLinkedListB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Enum getEnumB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Enum getEnumB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract HashMap getHashMapB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract HashMap getHashMapB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Map getMapB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Map getMapB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract File getFileB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract File getFileB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract InputStream getInputStreamB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract InputStream getInputStreamB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract int[] getIntArrayB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract int[] getIntArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract float[] getFloatArrayB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract float[] getFloatArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract double[] getDoubleArrayB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract double[] getDoubleArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract byte[] getByteArrayB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract byte[] getByteArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract String[] getStringArrayB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract String[] getStringArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Object[] getObjectArrayB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract Object[] getObjectArrayB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract boolean setB(Object o, String s1, Class[] c, Object o1, Object[] pArg);
	public abstract boolean setB(Modchu_ASBase accessSupport, Object o, String s1, Class[] c, Object o1, Object[] pArg);

	public abstract Object getB(int pIndex, Object[] pArg);
	public abstract Object getB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract boolean getBooleanB(int pIndex, Object[] pArg);
	public abstract boolean getBooleanB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract float getFloatB(int pIndex, Object[] pArg);
	public abstract float getFloatB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract double getDoubleB(int pIndex, Object[] pArg);
	public abstract double getDoubleB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract int getIntB(int pIndex, Object[] pArg);
	public abstract int getIntB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract long getLongB(int pIndex, Object[] pArg);
	public abstract long getLongB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract byte getByteB(int pIndex, Object[] pArg);
	public abstract byte getByteB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract String getStringB(int pIndex, Object[] pArg);
	public abstract String getStringB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract List getListB(int pIndex, Object[] pArg);
	public abstract List getListB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract ArrayList getArrayListB(int pIndex, Object[] pArg);
	public abstract ArrayList getArrayListB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract LinkedList getLinkedListB(int pIndex, Object[] pArg);
	public abstract LinkedList getLinkedListB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract Enum getEnumB(int pIndex, Object[] pArg);
	public abstract Enum getEnumB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(int pIndex, Object[] pArg);
	public abstract ConcurrentHashMap getConcurrentHashMapB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract HashMap getHashMapB(int pIndex, Object[] pArg);
	public abstract HashMap getHashMapB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract Map getMapB(int pIndex, Object[] pArg);
	public abstract Map getMapB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract File getFileB(int pIndex, Object[] pArg);
	public abstract File getFileB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract IntBuffer getIntBufferB(int pIndex, Object[] pArg);
	public abstract IntBuffer getIntBufferB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract InputStream getInputStreamB(int pIndex, Object[] pArg);
	public abstract InputStream getInputStreamB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract int[] getIntArrayB(int pIndex, Object[] pArg);
	public abstract int[] getIntArrayB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract float[] getFloatArrayB(int pIndex, Object[] pArg);
	public abstract float[] getFloatArrayB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract double[] getDoubleArrayB(int pIndex, Object[] pArg);
	public abstract double[] getDoubleArrayB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract byte[] getByteArrayB(int pIndex, Object[] pArg);
	public abstract byte[] getByteArrayB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract String[] getStringArrayB(int pIndex, Object[] pArg);
	public abstract String[] getStringArrayB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract Object[] getObjectArrayB(int pIndex, Object[] pArg);
	public abstract Object[] getObjectArrayB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);
	public abstract boolean setB(int pIndex, Object[] pArg);
	public abstract boolean setB(Modchu_ASBase accessSupport, int pIndex, Object[] pArg);

	public static int render = render_int;
	public static int setRender = setRender_int;
	public static int renderItems = renderItems_int;
	public static int allModelInit = allModelInit_int;
	public static int setArmorRendering = setArmorRendering_int;
	public static int FMLCommonHandlerInstance = FMLCommonHandlerInstance_int;
	public static int FMLCommonHandlerInstanceGetMinecraftServerInstance = FMLCommonHandlerInstanceGetMinecraftServerInstance_int;
	public static int FMLCommonHandlerInstanceGetMinecraftServerInstanceWorldServers = FMLCommonHandlerInstanceGetMinecraftServerInstanceWorldServers_int;
	public static int minecraftGetMinecraft = minecraftGetMinecraft_int;
	public static int minecraftPlayer = minecraftPlayer_int;
	public static int minecraftWorld = minecraftWorld_int;
	public static int minecraftMcDataDir = minecraftMcDataDir_int;
	public static int minecraftFontRenderer = minecraftFontRenderer_int;
	public static int minecraftGetSession = minecraftGetSession_int;
	public static int minecraftSession = minecraftSession_int;
	public static int minecraftGetResourceManager = minecraftGetResourceManager_int;
	public static int resourceManagerGetResource = resourceManagerGetResource_int;
	public static int resourceGetInputStream = resourceGetInputStream_int;
	public static int printChatMessage = printChatMessage_int;
	public static int isCtrlKeyDown = isCtrlKeyDown_int;
	public static int isShiftKeyDown = isShiftKeyDown_int;
	public static int isMac = isMac_int;
	public static int keyBindingKeyCode = keyBindingKeyCode_int;
	public static int keyBindingKeyDescription = keyBindingKeyDescription_int;
	public static int keyBindingKeyCategory = keyBindingKeyCategory_int;
	public static int keyBindingPressed = keyBindingPressed_int;
	public static int keyBindingGetIsKeyPressed = keyBindingGetIsKeyPressed_int;
	public static int keyBindingIsPressed = keyBindingIsPressed_int;
	public static int keyBindingPressTime = keyBindingPressTime_int;
	public static int blockBlockList = blockBlockList_int;
	public static int itemItemsList = itemItemsList_int;
	public static int getBlock = getBlock_int;
	public static int blockGetBlockFromItem = blockGetBlockFromItem_int;
	public static int getBlockItemStack = getBlockItemStack_int;
	public static int getItem = getItem_int;
	public static int itemStackGetItem = itemStackGetItem_int;
	public static int itemItemID = itemItemID_int;
	public static int itemStackItemID = itemStackItemID_int;
	public static int isSkull = isSkull_int;
	public static int entityEntityID = entityEntityID_int;
	public static int keybindArray = keybindArray_int;
	public static int userName = userName_int;
	public static int isPlanter = isPlanter_int;
	public static int isCamouflage = isCamouflage_int;
	public static int vacancyGlobalEntityID = vacancyGlobalEntityID_int;
	public static int isLANWorld = isLANWorld_int;
	public static int isIntegratedServerRunning = isIntegratedServerRunning_int;
	public static int isMuiti = isMuiti_int;
	public static int renderRenderBlocks = renderRenderBlocks_int;
	public static int renderBlocksRenderBlockAsItem = renderBlocksRenderBlockAsItem_int;
	public static int renderBlocksRenderBlockAllFaces = renderBlocksRenderBlockAllFaces_int;
	public static int minecraftDisplayGuiScreen = minecraftDisplayGuiScreen_int;
	public static int guiIngameDrawString = guiIngameDrawString_int;
	public static int renderManagerGetEntityRenderObject = renderManagerGetEntityRenderObject_int;
	public static int inventoryPlayerArmorItemInSlot = inventoryPlayerArmorItemInSlot_int;
	public static int itemStackStackSize = itemStackStackSize_int;
	public static int itemStackIsItemEnchanted = itemStackIsItemEnchanted_int;
	public static int mathHelperSin = mathHelperSin_int;
	public static int mathHelperCos = mathHelperCos_int;
	public static int mathHelperSqrt = mathHelperSqrt_int;
	public static int modelRendererGetTextureOffsetMap = modelRendererGetTextureOffsetMap_int;
	public static int textureOffsetTextureOffsetX = textureOffsetTextureOffsetX_int;
	public static int textureOffsetTextureOffsetY = textureOffsetTextureOffsetY_int;
	public static int minecraftCurrentScreen = minecraftCurrentScreen_int;
	public static int entityPlayerIsPlayerSleeping = entityPlayerIsPlayerSleeping_int;
	public static int entityWidth = entityWidth_int;
	public static int entityHeight = entityHeight_int;
	public static int gLAllocationCreateDirectIntBuffer = gLAllocationCreateDirectIntBuffer_int;
	public static int inventoryPlayerGetStackInSlot = inventoryPlayerGetStackInSlot_int;
	public static int itemStackGetItemDamage = itemStackGetItemDamage_int;
	public static int renderEngine = renderEngine_int;
	public static int renderEngineBindTexture = renderEngineBindTexture_int;
	public static int textureManagerBindTexture = textureManagerBindTexture_int;
	public static int textureManagerGetTexture = textureManagerGetTexture_int;
	public static int renderManagerInstance = renderManagerInstance_int;
	public static int renderManagerGetEntityClassRenderObject = renderManagerGetEntityClassRenderObject_int;
	public static int renderManagerRenderEntityWithPosYaw = renderManagerRenderEntityWithPosYaw_int;
	public static int renderRenderManager = renderRenderManager_int;
	public static int renderRenderManagerRenderEngine = renderRenderManagerRenderEngine_int;
	public static int renderMainModel = renderMainModel_int;
	public static int renderFirstPersonArm = renderFirstPersonArm_int;
	public static int blockSetLightOpacity = blockSetLightOpacity_int;
	public static int newInstanceKeyBinding = newInstanceKeyBinding_int;
	public static int renderManagerEntityRenderMap = renderManagerEntityRenderMap_int;
	public static int minecraftGameSettings = minecraftGameSettings_int;
	public static int minecraftGameSettingsThirdPersonView = minecraftGameSettingsThirdPersonView_int;
	public static int minecraftGameSettingsSetThirdPersonView = minecraftGameSettingsSetThirdPersonView_int;
	public static int minecraftGameSettingsTouchscreen = minecraftGameSettingsTouchscreen_int;
	public static int minecraftEntityRenderer = minecraftEntityRenderer_int;
	public static int minecraftEntityRendererItemRenderer = minecraftEntityRendererItemRenderer_int;
	public static int minecraftSystemTime = minecraftSystemTime_int;
	public static int minecraftGetSystemTime = minecraftGetSystemTime_int;
	public static int minecraftDisplayWidth = minecraftDisplayWidth_int;
	public static int minecraftDisplayHeight = minecraftDisplayHeight_int;
	public static int renderManagerItemRenderer = renderManagerItemRenderer_int;
	public static int renderManagerItemRendererRenderItem = renderManagerItemRendererRenderItem_int;
	public static int entityRendererItemRenderer = entityRendererItemRenderer_int;
	public static int minecraftPlayerController = minecraftPlayerController_int;
	public static int worldGetWorldInfo = worldGetWorldInfo_int;
	public static int worldGetWorldInfoGetGameType = worldGetWorldInfoGetGameType_int;
	public static int entityPosX = entityPosX_int;
	public static int entityPosY = entityPosY_int;
	public static int entityPosZ = entityPosZ_int;
	public static int entityPrevPosX = entityPrevPosX_int;
	public static int entityPrevPosY = entityPrevPosY_int;
	public static int entityPrevPosZ = entityPrevPosZ_int;
	public static int entityMotionX = entityMotionX_int;
	public static int entityMotionY = entityMotionY_int;
	public static int entityMotionZ = entityMotionZ_int;
	public static int playerControllerSetGameType = playerControllerSetGameType_int;
	public static int minecraftSetDimensionAndSpawnPlayer = minecraftSetDimensionAndSpawnPlayer_int;
	public static int playerControllerMPSetPlayerCapabilities = playerControllerMPSetPlayerCapabilities_int;
	public static int worldSetEntityDead = worldSetEntityDead_int;
	public static int entitySetDead = entitySetDead_int;
	public static int playerControllerMPCreatePlayer = playerControllerMPCreatePlayer_int;
	public static int minecraftRenderViewEntity = minecraftRenderViewEntity_int;
	public static int minecraftTextureManager = minecraftTextureManager_int;
	public static int minecraftGetTextureManager = minecraftGetTextureManager_int;
	public static int playerControllerMPFlipPlayer = playerControllerMPFlipPlayer_int;
	public static int worldSpawnPlayerWithLoadedChunks = worldSpawnPlayerWithLoadedChunks_int;
	public static int entityPlayerSPMovementInput = entityPlayerSPMovementInput_int;
	public static int entityPlayerSPFunc_6420_o = entityPlayerSPFunc_6420_o_int;
	public static int playerControllerFunc_6473_b = playerControllerFunc_6473_b_int;
	public static int entityPlayerInventory = entityPlayerInventory_int;
	public static int entityPlayerInventoryGetCurrentItem = entityPlayerInventoryGetCurrentItem_int;
	public static int entityPlayerInventoryPlayerArmorItemInSlot = entityPlayerInventoryPlayerArmorItemInSlot_int;
	public static int entityPlayerMainInventory = entityPlayerMainInventory_int;
	public static int entityPlayerArmorInventory = entityPlayerArmorInventory_int;
	public static int entityPlayerInventoryGetStackInSlot = entityPlayerInventoryGetStackInSlot_int;
	public static int gameSettingsKeyBindForward = gameSettingsKeyBindForward_int;
	public static int gameSettingsKeyBindBack = gameSettingsKeyBindBack_int;
	public static int gameSettingsKeyBindLeft = gameSettingsKeyBindLeft_int;
	public static int gameSettingsKeyBindRight = gameSettingsKeyBindRight_int;
	public static int entityIsRiding = entityIsRiding_int;
	public static int minecraftInGameHasFocus = minecraftInGameHasFocus_int;
	public static int entitySetPosition = entitySetPosition_int;
	public static int entitySetSize = entitySetSize_int;
	public static int entityGetEyeHeight = entityGetEyeHeight_int;
	public static int entityBoundingBox = entityBoundingBox_int;
	public static int entityBoundingBoxMinX = entityBoundingBoxMinX_int;
	public static int entityBoundingBoxMinY = entityBoundingBoxMinY_int;
	public static int entityBoundingBoxMinZ = entityBoundingBoxMinZ_int;
	public static int entityBoundingBoxMaxX = entityBoundingBoxMaxX_int;
	public static int entityBoundingBoxMaxY = entityBoundingBoxMaxY_int;
	public static int entityBoundingBoxMaxZ = entityBoundingBoxMaxZ_int;
	public static int entityIsSneaking = entityIsSneaking_int;
	public static int entityWorldObj = entityWorldObj_int;
	public static int entityDimension = entityDimension_int;
	public static int worldIsAirBlock = worldIsAirBlock_int;
	public static int entityRidingEntity = entityRidingEntity_int;
	public static int entityLivingBaseDeathTime = entityLivingBaseDeathTime_int;
	public static int entityYOffset = entityYOffset_int;
	public static int worldIsDaytime = worldIsDaytime_int;
	public static int entityGetBrightness = entityGetBrightness_int;
	public static int entityGetBrightnessForRender = entityGetBrightnessForRender_int;
	public static int worldCanBlockSeeTheSky = worldCanBlockSeeTheSky_int;
	public static int entitySetFire = entitySetFire_int;
	public static int entityIsWet = entityIsWet_int;
	public static int entityIsInWater = entityIsInWater_int;
	public static int damageSourceStarve = damageSourceStarve_int;
	public static int damageSourceCactus = damageSourceCactus_int;
	public static int damageSourceInWall = damageSourceInWall_int;
	public static int damageSourceDrown = damageSourceDrown_int;
	public static int damageSourceOnFire = damageSourceOnFire_int;
	public static int damageSourceLava = damageSourceLava_int;
	public static int damageSourceInFire = damageSourceInFire_int;
	public static int damageSourceMagic = damageSourceMagic_int;
	public static int damageSourceGeneric = damageSourceGeneric_int;
	public static int damageSourceFall = damageSourceFall_int;
	public static int damageSourceOutOfWorld = damageSourceOutOfWorld_int;
	public static int damageSourceWither = damageSourceWither_int;
	public static int damageSourceAnvil = damageSourceAnvil_int;
	public static int damageSourceFallingBlock = damageSourceFallingBlock_int;
	public static int entityAttackEntityFrom = entityAttackEntityFrom_int;
	public static int entityLivingBaseHealth = entityLivingBaseHealth_int;
	public static int entityLivingBaseGetHealth = entityLivingBaseGetHealth_int;
	public static int entityLivingBaseMaxHealth = entityLivingBaseMaxHealth_int;
	public static int entityLivingBaseGetMaxHealth = entityLivingBaseGetMaxHealth_int;
	public static int entityLivingBaseSetHealth = entityLivingBaseSetHealth_int;
	public static int entityLivingBaseSetMaxHealth = entityLivingBaseSetMaxHealth_int;
	public static int worldIsRemote = worldIsRemote_int;
	public static int enumCreatureAttributeUNDEFINED = enumCreatureAttributeUNDEFINED_int;
	public static int enumCreatureAttributeUNDEAD = enumCreatureAttributeUNDEAD_int;
	public static int enumCreatureAttributeARTHROPOD = enumCreatureAttributeARTHROPOD_int;
	public static int worldIsBlockNormalCubeDefault = worldIsBlockNormalCubeDefault_int;
	public static int entityPlayerFoodStats = entityPlayerFoodStats_int;
	public static int entityPlayerGetFoodStats = entityPlayerGetFoodStats_int;
	public static int entityPlayerPlayerLevel = entityPlayerPlayerLevel_int;
	public static int entityPlayerTotalXP = entityPlayerTotalXP_int;
	public static int entityPlayerCurrentXP = entityPlayerCurrentXP_int;
	public static int entityPlayerScore = entityPlayerScore_int;
	public static int itemStackCopyItemStack = itemStackCopyItemStack_int;
	public static int renderBipedBipedArmorFilenamePrefix = renderBipedBipedArmorFilenamePrefix_int;
	public static int itemArmorRenderIndex = itemArmorRenderIndex_int;
	public static int renderHelperEnableStandardItemLighting = renderHelperEnableStandardItemLighting_int;
	public static int renderHelperDisableStandardItemLighting = renderHelperDisableStandardItemLighting_int;
	public static int entityLivingBasePrevRenderYawOffset = entityLivingBasePrevRenderYawOffset_int;
	public static int entityLivingBaseRenderYawOffset = entityLivingBaseRenderYawOffset_int;
	public static int entityLivingBasePrevRotationYawHead = entityLivingBasePrevRotationYawHead_int;
	public static int entityLivingBaseRotationYawHead = entityLivingBaseRotationYawHead_int;
	public static int entityLivingBasePrevLimbSwingAmount = entityLivingBasePrevLimbSwingAmount_int;
	public static int entityLivingBaseLimbSwingAmount = entityLivingBaseLimbSwingAmount_int;
	public static int entityLivingBaseLimbSwing = entityLivingBaseLimbSwing_int;
	public static int entityLivingBaseIsJumping = entityLivingBaseIsJumping_int;
	public static int entityLivingBaseMoveForward = entityLivingBaseMoveForward_int;
	public static int entityLivingBaseMoveStrafing = entityLivingBaseMoveStrafing_int;
	public static int entityPrevRotationYaw = entityPrevRotationYaw_int;
	public static int entityRotationYaw = entityRotationYaw_int;
	public static int entityPrevRotationPitch = entityPrevRotationPitch_int;
	public static int entityRotationPitch = entityRotationPitch_int;
	public static int entityCloakUrl = entityCloakUrl_int;
	public static int modelBaseSetLivingAnimations = modelBaseSetLivingAnimations_int;
	public static int entityIsInvisible = entityIsInvisible_int;
	public static int entityPlayerGetItemInUseCount = entityPlayerGetItemInUseCount_int;
	public static int itemStackGetItemUseAction = itemStackGetItemUseAction_int;
	public static int enumActionBlock = enumActionBlock_int;
	public static int enumActionBow = enumActionBow_int;
	public static int enumActionDrink = enumActionDrink_int;
	public static int enumActionEat = enumActionEat_int;
	public static int enumActionNone = enumActionNone_int;
	public static int entityLivingBaseGetSwingProgress = entityLivingBaseGetSwingProgress_int;
	public static int entityPlayerGetHideCape = entityPlayerGetHideCape_int;
	public static int abstractClientPlayerGetTextureSkin = abstractClientPlayerGetTextureSkin_int;
	public static int abstractClientPlayerGetTextureCape = abstractClientPlayerGetTextureCape_int;
	public static int threadDownloadImageDataIsTextureUploaded = threadDownloadImageDataIsTextureUploaded_int;
	public static int renderLoadDownloadableImageTexture = renderLoadDownloadableImageTexture_int;
	public static int entityPlayerPrevChasingPosX = entityPlayerPrevChasingPosX_int;
	public static int entityPlayerPrevChasingPosY = entityPlayerPrevChasingPosY_int;
	public static int entityPlayerPrevChasingPosZ = entityPlayerPrevChasingPosZ_int;
	public static int entityPlayerChasingPosX = entityPlayerChasingPosX_int;
	public static int entityPlayerChasingPosY = entityPlayerChasingPosY_int;
	public static int entityPlayerChasingPosZ = entityPlayerChasingPosZ_int;
	public static int entityPlayerPrevCameraYaw = entityPlayerPrevCameraYaw_int;
	public static int entityPlayerCameraYaw = entityPlayerCameraYaw_int;
	public static int entityPrevDistanceWalkedModified = entityPrevDistanceWalkedModified_int;
	public static int entityDistanceWalkedModified = entityDistanceWalkedModified_int;
	public static int modelBaseSetRotationAngles = modelBaseSetRotationAngles_int;
	public static int modelBaseRender = modelBaseRender_int;
	public static int entityTicksExisted = entityTicksExisted_int;
	public static int renderBindTexture = renderBindTexture_int;
	public static int rendererLivingEntityRES_ITEM_GLINT = rendererLivingEntityRES_ITEM_GLINT_int;
	public static int openGlHelperDefaultTexUnit = openGlHelperDefaultTexUnit_int;
	public static int openGlHelperLightmapTexUnit = openGlHelperLightmapTexUnit_int;
	public static int openGlHelperSetActiveTexture = openGlHelperSetActiveTexture_int;
	public static int guiScreenButtonList = guiScreenButtonList_int;
	public static int guiScreenWidth = guiScreenWidth_int;
	public static int guiScreenHeight = guiScreenHeight_int;
	public static int fontRendererDrawString = fontRendererDrawString_int;
	public static int guiButtonWidth = guiButtonWidth_int;
	public static int guiButtonHeight = guiButtonHeight_int;
	public static int guiButtonEnabled = guiButtonEnabled_int;
	public static int guiButtonXPosition = guiButtonXPosition_int;
	public static int guiButtonYPosition = guiButtonYPosition_int;
	public static int guiButtonVisible = guiButtonVisible_int;
	public static int guiButtonID = guiButtonID_int;
	public static int resourceManagerInputStream = resourceManagerInputStream_int;
	public static int getResource = getResource_int;
	public static int textureUtilUploadTextureImage = textureUtilUploadTextureImage_int;
	public static int textureUtilBindTexture = textureUtilBindTexture_int;
	public static int renderEngineSetupTexture = renderEngineSetupTexture_int;
	public static int tessellatorInstance = tessellatorInstance_int;
	public static int tessellatorStartDrawing = tessellatorStartDrawing_int;
	public static int tessellatorStartDrawingQuads = tessellatorStartDrawingQuads_int;
	public static int tessellatorSetNormal = tessellatorSetNormal_int;
	public static int tessellatorAddVertexWithUV = tessellatorAddVertexWithUV_int;
	public static int tessellatorDraw = tessellatorDraw_int;
	public static int tessellatorSetColorOpaque_I = tessellatorSetColorOpaque_I_int;
	public static int tessellatorSetColorRGBA_I = tessellatorSetColorRGBA_I_int;
	public static int guiSlotRegisterScrollButtons = guiSlotRegisterScrollButtons_int;
	public static int worldPlayerEntities = worldPlayerEntities_int;
	public static int guiScreenActionPerformed = guiScreenActionPerformed_int;
	public static int guiScreenDrawScreen = guiScreenDrawScreen_int;
	public static int guiScreenFontRenderer = guiScreenFontRenderer_int;
	public static int guiDrawCenteredString = guiDrawCenteredString_int;
	public static int gameSettingsGetKeyDisplayString = gameSettingsGetKeyDisplayString_int;
	public static int guiOptionsBackground = guiOptionsBackground_int;
	public static int guiSlotDrawScreen = guiSlotDrawScreen_int;
	public static int guiSlotActionPerformed = guiSlotActionPerformed_int;
	public static int texturedQuadDraw = texturedQuadDraw_int;
	public static int positionTextureVertexSetTexturePosition = positionTextureVertexSetTexturePosition_int;
	public static int positionTextureVertexVector3D = positionTextureVertexVector3D_int;
	public static int positionTextureVertexTexturePositionX = positionTextureVertexTexturePositionX_int;
	public static int positionTextureVertexTexturePositionY = positionTextureVertexTexturePositionY_int;
	public static int vec3Subtract = vec3Subtract_int;
	public static int vec3CrossProduct = vec3CrossProduct_int;
	public static int vec3Normalize = vec3Normalize_int;
	public static int vec3CreateVectorHelper = vec3CreateVectorHelper_int;
	public static int vec3XCoord = vec3XCoord_int;
	public static int vec3YCoord = vec3YCoord_int;
	public static int vec3ZCoord = vec3ZCoord_int;
	public static int axisAlignedBBExpand = axisAlignedBBExpand_int;
	public static int axisAlignedBBGetBoundingBox = axisAlignedBBGetBoundingBox_int;
	public static int blockGetRenderType = blockGetRenderType_int;
	public static int damageSourceGetEntity = damageSourceGetEntity_int;
	public static int damageSourceIsFireDamage = damageSourceIsFireDamage_int;
	public static int entityArrowShootingEntity = entityArrowShootingEntity_int;
	public static int entityCreatureEntityToAttack = entityCreatureEntityToAttack_int;
	public static int entityCreatureGetEntityToAttack = entityCreatureGetEntityToAttack_int;
	public static int entityCreatureSetPathToEntity = entityCreatureSetPathToEntity_int;
	public static int entityLivingBaseDamageEntity = entityLivingBaseDamageEntity_int;
	public static int entityLivingBaseSetRevengeTarget = entityLivingBaseSetRevengeTarget_int;
	public static int entityLivingBaseRecentlyHit = entityLivingBaseRecentlyHit_int;
	public static int entityLivingBaseAttackingPlayer = entityLivingBaseAttackingPlayer_int;
	public static int entityLivingBaseIsTamed = entityLivingBaseIsTamed_int;
	public static int entityLivingBaseSetBeenAttacked = entityLivingBaseSetBeenAttacked_int;
	public static int entityLivingBaseAttackedAtYaw = entityLivingBaseAttackedAtYaw_int;
	public static int entityLivingBaseKnockBack = entityLivingBaseKnockBack_int;
	public static int entityLivingBaseOnDeath = entityLivingBaseOnDeath_int;
	public static int entityGetDistanceToEntity = entityGetDistanceToEntity_int;
	public static int entityCreatureHasAttacked = entityCreatureHasAttacked_int;
	public static int entityIsEntityAlive = entityIsEntityAlive_int;
	public static int entityPlaySound = entityPlaySound_int;
	public static int entityAnimalInLove = entityAnimalInLove_int;
	public static int entityLivingBaseIsPotionActive = entityLivingBaseIsPotionActive_int;
	public static int entityLivingBaseEntityAge = entityLivingBaseEntityAge_int;
	public static int entityLivingBaseGetHeldItem = entityLivingBaseGetHeldItem_int;
	public static int entityLivingBaseGetSoundVolume = entityLivingBaseGetSoundVolume_int;
	public static int entityLivingBaseGetSoundPitch = entityLivingBaseGetSoundPitch_int;
	public static int entityLivingCurrentTarget = entityLivingCurrentTarget_int;
	public static int entityStartRiding = entityStartRiding_int;
	public static int entityPlayerGetCurrentEquippedItem = entityPlayerGetCurrentEquippedItem_int;
	public static int entityPlayerInventoryCurrentItem = entityPlayerInventoryCurrentItem_int;
	public static int entityPlayerInventorySetInventorySlotContents = entityPlayerInventorySetInventorySlotContents_int;
	public static int entityLivingBaseAttackTime = entityLivingBaseAttackTime_int;
	public static int enumCreatureTypeAmbient = enumCreatureTypeAmbient_int;
	public static int enumCreatureTypeCreature = enumCreatureTypeCreature_int;
	public static int enumCreatureTypeMonster = enumCreatureTypeMonster_int;
	public static int enumCreatureTypeWaterCreature = enumCreatureTypeWaterCreature_int;
	public static int itemIsFull3D = itemIsFull3D_int;
	public static int itemItemInteractionForEntity = itemItemInteractionForEntity_int;
	public static int modelRendererAddBox = modelRendererAddBox_int;
	public static int modelRendererPostRender = modelRendererPostRender_int;
	public static int modelRendererRender = modelRendererRender_int;
	public static int modelRendererRenderWithRotation = modelRendererRenderWithRotation_int;
	public static int modelRendererRotateAngleX = modelRendererRotateAngleX_int;
	public static int modelRendererRotateAngleY = modelRendererRotateAngleY_int;
	public static int modelRendererRotateAngleZ = modelRendererRotateAngleZ_int;
	public static int modelRendererRotationPointX = modelRendererRotationPointX_int;
	public static int modelRendererRotationPointY = modelRendererRotationPointY_int;
	public static int modelRendererRotationPointZ = modelRendererRotationPointZ_int;
	public static int modelRendererSetRotationPoint = modelRendererSetRotationPoint_int;
	public static int modelRendererShowModel = modelRendererShowModel_int;
	public static int nbttagcompoundGetBoolean = nbttagcompoundGetBoolean_int;
	public static int nbttagcompoundGetByte = nbttagcompoundGetByte_int;
	public static int nbttagcompoundGetByteArray = nbttagcompoundGetByteArray_int;
	public static int nbttagcompoundGetDouble = nbttagcompoundGetDouble_int;
	public static int nbttagcompoundGetFloat = nbttagcompoundGetFloat_int;
	public static int nbttagcompoundGetIntArray = nbttagcompoundGetIntArray_int;
	public static int nbttagcompoundGetInteger = nbttagcompoundGetInteger_int;
	public static int nbttagcompoundGetLong = nbttagcompoundGetLong_int;
	public static int nbttagcompoundGetShort = nbttagcompoundGetShort_int;
	public static int nbttagcompoundGetString = nbttagcompoundGetString_int;
	public static int nbttagcompoundSetBoolean = nbttagcompoundSetBoolean_int;
	public static int nbttagcompoundSetByte = nbttagcompoundSetByte_int;
	public static int nbttagcompoundSetByteArray = nbttagcompoundSetByteArray_int;
	public static int nbttagcompoundSetDouble = nbttagcompoundSetDouble_int;
	public static int nbttagcompoundSetFloat = nbttagcompoundSetFloat_int;
	public static int nbttagcompoundSetIntArray = nbttagcompoundSetIntArray_int;
	public static int nbttagcompoundSetInteger = nbttagcompoundSetInteger_int;
	public static int nbttagcompoundSetLong = nbttagcompoundSetLong_int;
	public static int nbttagcompoundSetShort = nbttagcompoundSetShort_int;
	public static int nbttagcompoundSetString = nbttagcompoundSetString_int;
	public static int newModelRenderer = newModelRenderer_int;
	public static int potionAbsorption = potionAbsorption_int;
	public static int potionBlindness = potionBlindness_int;
	public static int potionConfusion = potionConfusion_int;
	public static int potionDamageBoost = potionDamageBoost_int;
	public static int potionDigSlowdown = potionDigSlowdown_int;
	public static int potionDigSpeed = potionDigSpeed_int;
	public static int potionFireResistance = potionFireResistance_int;
	public static int potionHarm = potionHarm_int;
	public static int potionHeal = potionHeal_int;
	public static int potionHealthBoost = potionHealthBoost_int;
	public static int potionHunger = potionHunger_int;
	public static int potionInvisibility = potionInvisibility_int;
	public static int potionJump = potionJump_int;
	public static int potionMoveSlowdown = potionMoveSlowdown_int;
	public static int potionMoveSpeed = potionMoveSpeed_int;
	public static int potionNightVision = potionNightVision_int;
	public static int potionPoison = potionPoison_int;
	public static int potionRegeneration = potionRegeneration_int;
	public static int potionResistance = potionResistance_int;
	public static int potionSaturation = potionSaturation_int;
	public static int potionWaterBreathing = potionWaterBreathing_int;
	public static int potionWeakness = potionWeakness_int;
	public static int potionWither = potionWither_int;
	public static int renderBlocksRenderItemIn3d = renderBlocksRenderItemIn3d_int;
	public static int worldGetEntitiesWithinAABB = worldGetEntitiesWithinAABB_int;
	public static int worldGetPathEntityToEntity = worldGetPathEntityToEntity_int;
	public static int worldPlaySoundAtEntity = worldPlaySoundAtEntity_int;
	public static int worldSetEntityState = worldSetEntityState_int;
	public static int worldSettingsGameTypeADVENTURE = worldSettingsGameTypeADVENTURE_int;
	public static int worldSettingsGameTypeCREATIVE = worldSettingsGameTypeCREATIVE_int;
	public static int worldSettingsGameTypeNOT_SET = worldSettingsGameTypeNOT_SET_int;
	public static int worldSettingsGameTypeSURVIVAL = worldSettingsGameTypeSURVIVAL_int;
	public static int worldSpawnParticle = worldSpawnParticle_int;
	public static int worldGetClosestPlayerToEntity = worldGetClosestPlayerToEntity_int;
	public static int entityLastDamage = entityLastDamage_int;
	public static int entityAgeableGetGrowingAge = entityAgeableGetGrowingAge_int;
	public static int entityOnGround = entityOnGround_int;
	public static int damageSourceCauseMobDamage = damageSourceCauseMobDamage_int;
	public static int worldLoadedEntityList = worldLoadedEntityList_int;
	public static int entityGetDataWatcher = entityGetDataWatcher_int;
	public static int dataManagerGetWatchableObjectItemStack = dataManagerGetWatchableObjectItemStack_int;
	public static int entityLivingNumTicksToChaseTarget = entityLivingNumTicksToChaseTarget_int;
	public static int dataManagerGetWatchableObjectString = dataManagerGetWatchableObjectString_int;
	public static int dataManagerUpdateObject = dataManagerUpdateObject_int;
	public static int dataManagerGetWatchableObjectByte = dataManagerGetWatchableObjectByte_int;
	public static int worldGetPlayerEntityByName = worldGetPlayerEntityByName_int;
	public static int entityTameableGetOwnerName = entityTameableGetOwnerName_int;
	public static int entityAnimalBreeding = entityAnimalBreeding_int;
	public static int worldSpawnEntity = worldSpawnEntity_int;
	public static int biomeOcean = biomeOcean_int;
	public static int biomePlains = biomePlains_int;
	public static int biomeDesert = biomeDesert_int;
	public static int biomeExtremeHills = biomeExtremeHills_int;
	public static int biomeForest = biomeForest_int;
	public static int biomeTaiga = biomeTaiga_int;
	public static int biomeSwampland = biomeSwampland_int;
	public static int biomeRiver = biomeRiver_int;
	public static int biomeHell = biomeHell_int;
	public static int biomeSky = biomeSky_int;
	public static int biomeFrozenOcean = biomeFrozenOcean_int;
	public static int biomeFrozenRiver = biomeFrozenRiver_int;
	public static int biomeIcePlains = biomeIcePlains_int;
	public static int biomeIceMountains = biomeIceMountains_int;
	public static int biomeMushroomIsland = biomeMushroomIsland_int;
	public static int biomeMushroomIslandShore = biomeMushroomIslandShore_int;
	public static int biomeBeach = biomeBeach_int;
	public static int biomeDesertHills = biomeDesertHills_int;
	public static int biomeForestHills = biomeForestHills_int;
	public static int biomeTaigaHills = biomeTaigaHills_int;
	public static int biomeExtremeHillsEdge = biomeExtremeHillsEdge_int;
	public static int biomeJungle = biomeJungle_int;
	public static int biomeJungleHills = biomeJungleHills_int;
	public static int biomeJungleEdge = biomeJungleEdge_int;
	public static int biomeDeepOcean = biomeDeepOcean_int;
	public static int biomeStoneBeach = biomeStoneBeach_int;
	public static int biomeStoneColdBeach = biomeStoneColdBeach_int;
	public static int biomeBirchForest = biomeBirchForest_int;
	public static int biomeBirchForestHills = biomeBirchForestHills_int;
	public static int biomeRoofedForest = biomeRoofedForest_int;
	public static int biomeColdTaiga = biomeColdTaiga_int;
	public static int biomeColdTaigaHills = biomeColdTaigaHills_int;
	public static int biomeMegaTaiga = biomeMegaTaiga_int;
	public static int biomeMegaTaigaHills = biomeMegaTaigaHills_int;
	public static int biomeExtremeHillsPlus = biomeExtremeHillsPlus_int;
	public static int biomeSavanna = biomeSavanna_int;
	public static int biomeSavannaPlateau = biomeSavannaPlateau_int;
	public static int biomeMesa = biomeMesa_int;
	public static int biomeMesaPlateau_F = biomeMesaPlateau_F_int;
	public static int biomeMesaPlateau = biomeMesaPlateau_int;
	public static int dataManagerAddObject = dataManagerAddObject_int;
	public static int dataManagerGetWatchedObject = dataManagerGetWatchedObject_int;
	public static int entityLivingBaseMaxHurtResistantTime = entityLivingBaseMaxHurtResistantTime_int;
	public static int entityHurtResistantTime = entityHurtResistantTime_int;
	public static int entityLivingGetNavigator = entityLivingGetNavigator_int;
	public static int entityLivingNavigatorClearPathEntity = entityLivingNavigatorClearPathEntity_int;
	public static int entityLivingBaseGetEquipmentInSlot = entityLivingBaseGetEquipmentInSlot_int;
	public static int itemStackDamageItem = itemStackDamageItem_int;
	public static int entityLivingBasePrevHealth = entityLivingBasePrevHealth_int;
	public static int entityLivingBaseHurtTime = entityLivingBaseHurtTime_int;
	public static int entityLivingBaseMaxHurtTime = entityLivingBaseMaxHurtTime_int;
	public static int entityLivingBaseGetAITarget = entityLivingBaseGetAITarget_int;
	public static int entityLivingBaseIsChild = entityLivingBaseIsChild_int;
	public static int itemSetUnlocalizedName = itemSetUnlocalizedName_int;
	public static int itemSetCreativeTab = itemSetCreativeTab_int;
	public static int creativeTabsTabBlock = creativeTabsTabBlock_int;
	public static int creativeTabsTabDecorations = creativeTabsTabDecorations_int;
	public static int creativeTabsTabRedstone = creativeTabsTabRedstone_int;
	public static int creativeTabsTabTransport = creativeTabsTabTransport_int;
	public static int creativeTabsTabMisc = creativeTabsTabMisc_int;
	public static int creativeTabsTabAllSearch = creativeTabsTabAllSearch_int;
	public static int creativeTabsTabFood = creativeTabsTabFood_int;
	public static int creativeTabsTabTools = creativeTabsTabTools_int;
	public static int creativeTabsTabCombat = creativeTabsTabCombat_int;
	public static int creativeTabsTabBrewing = creativeTabsTabBrewing_int;
	public static int creativeTabsTabMaterials = creativeTabsTabMaterials_int;
	public static int creativeTabsTabInventory = creativeTabsTabInventory_int;
	public static int worldGetBiomeGenForCoords = worldGetBiomeGenForCoords_int;
	public static int itemSetTextureName = itemSetTextureName_int;
	public static int entityRiddenByEntity = entityRiddenByEntity_int;
	public static int entityIsDead = entityIsDead_int;
	public static int entityPlayerSetItemInUse = entityPlayerSetItemInUse_int;
	public static int entityLivingBaseHeal = entityLivingBaseHeal_int;
	public static int itemIconString = itemIconString_int;
	public static int iIconRegisterRegisterIcon = iIconRegisterRegisterIcon_int;
	public static int itemItemIcon = itemItemIcon_int;
	public static int entityLivingBaseSwingItem = entityLivingBaseSwingItem_int;
	public static int entityTameableIsTamed = entityTameableIsTamed_int;
	public static int entityHorseIsTame = entityHorseIsTame_int;
	public static int isTamed = isTamed_int;
	public static int entityGetUniqueID = entityGetUniqueID_int;
	public static int worldWeatherEffects = worldWeatherEffects_int;
	public static int playerEntities = playerEntities_int;
	public static int itemShouldRotateAroundWhenRendering = itemShouldRotateAroundWhenRendering_int;
	public static int itemStackHasTagCompound = itemStackHasTagCompound_int;
	public static int itemStackGetTagCompound = itemStackGetTagCompound_int;
	public static int nbtTagCompoundHasKey = nbtTagCompoundHasKey_int;
	public static int nbtTagCompoundGetString = nbtTagCompoundGetString_int;
	public static int tileEntitySkullRendererInstance = tileEntitySkullRendererInstance_int;
	public static int tileEntitySkullRendererRenderSkull = tileEntitySkullRendererRenderSkull_int;
	public static int itemRequiresMultipleRenderPasses = itemRequiresMultipleRenderPasses_int;
	public static int itemGetColorFromItemStack = itemGetColorFromItemStack_int;
	public static int blockDoublePlantGetMixedBrightnessForBlock = blockDoublePlantGetMixedBrightnessForBlock_int;
	public static int tessellatorSetBrightness = tessellatorSetBrightness_int;
	public static int blockDoublePlantColorMultiplier = blockDoublePlantColorMultiplier_int;
	public static int biomeGetBiomeGrassColor = biomeGetBiomeGrassColor_int;
	public static int entityRendererAnaglyphEnable = entityRendererAnaglyphEnable_int;
	public static int tessellatorSetColorOpaque_F = tessellatorSetColorOpaque_F_int;
	public static int blockDoublePlantFunc_149887_c = blockDoublePlantFunc_149887_c_int;
	public static int blockDoublePlantFunc_149890_d = blockDoublePlantFunc_149890_d_int;
	public static int blockDoublePlantFunc_149888_a = blockDoublePlantFunc_149888_a_int;
	public static int renderBlocksDrawCrossedSquares = renderBlocksDrawCrossedSquares_int;
	public static int blockDoublePlantSunflowerIcons = blockDoublePlantSunflowerIcons_int;
	public static int iIconGetMinU = iIconGetMinU_int;
	public static int iIconGetMinV = iIconGetMinV_int;
	public static int iIconGetMaxU = iIconGetMaxU_int;
	public static int iIconGetMaxV = iIconGetMaxV_int;
	public static int gLAllocationGenerateDisplayLists = gLAllocationGenerateDisplayLists_int;
	public static int itemItemRegistry = itemItemRegistry_int;
	public static int registrySimpleRegistryObjects = registrySimpleRegistryObjects_int;
	public static int potionHelperSugarEffect = potionHelperSugarEffect_int;
	public static int potionHelperGhastTearEffect = potionHelperGhastTearEffect_int;
	public static int potionHelperSpiderEyeEffect = potionHelperSpiderEyeEffect_int;
	public static int potionHelperFermentedSpiderEyeEffect = potionHelperFermentedSpiderEyeEffect_int;
	public static int potionHelperSpeckledMelonEffect = potionHelperSpeckledMelonEffect_int;
	public static int potionHelperBlazePowderEffect = potionHelperBlazePowderEffect_int;
	public static int potionHelperMagmaCreamEffect = potionHelperMagmaCreamEffect_int;
	public static int potionHelperRedstoneEffect = potionHelperRedstoneEffect_int;
	public static int potionHelperGlowstoneEffect = potionHelperGlowstoneEffect_int;
	public static int potionHelperGunpowderEffect = potionHelperGunpowderEffect_int;
	public static int potionHelperGoldenCarrotEffect = potionHelperGoldenCarrotEffect_int;
	public static int itemSetPotionEffect = itemSetPotionEffect_int;
	public static int textureManagerGetResourceLocation = textureManagerGetResourceLocation_int;
	public static int modelBoxVertexPositions = modelBoxVertexPositions_int;
	public static int modelBoxQuadList = modelBoxQuadList_int;
	public static int itemArmorGetColor = itemArmorGetColor_int;
	public static int convertGlColor = convertGlColor_int;
	public static int rendererLivingEntityPassSpecialRender = rendererLivingEntityPassSpecialRender_int;
	public static int itemOnItemRightClick = itemOnItemRightClick_int;
	public static int entityTameableSetOwner = entityTameableSetOwner_int;
	public static int nbtTagCompoundGetCompoundTag = nbtTagCompoundGetCompoundTag_int;
	public static int nbtUtilReadGameProfileFromNBT = nbtUtilReadGameProfileFromNBT_int;
	public static int stringUtilsIsNullOrEmpty = stringUtilsIsNullOrEmpty_int;
	public static int minecraftServerGetServer = minecraftServerGetServer_int;
	public static int minecraftServerGetServerWorldServers = minecraftServerGetServerWorldServers_int;
	public static int entityPlayerDestroyCurrentEquippedItem = entityPlayerDestroyCurrentEquippedItem_int;
	public static int entityPlayerCapabilitiesIsCreativeMode = entityPlayerCapabilitiesIsCreativeMode_int;
	public static int modelBaseIsChild = modelBaseIsChild_int;
	public static int entityBatSetIsBatHanging = entityBatSetIsBatHanging_int;
	public static int entitySetEating = entitySetEating_int;
	public static int entityLivingBaseSetPositionAndUpdate = entityLivingBaseSetPositionAndUpdate_int;
	public static int entitySetPositionAndRotation = entitySetPositionAndRotation_int;
	public static int abstractClientPlayerLocationSkin = abstractClientPlayerLocationSkin_int;
	public static int abstractClientPlayerLocationCape = abstractClientPlayerLocationCape_int;
	public static int worldAddEntityToWorld = worldAddEntityToWorld_int;
	public static int itemStackGetMaxDamage = itemStackGetMaxDamage_int;
	public static int mathHelperFloor = mathHelperFloor_int;
	public static int mathHelperLfloor = mathHelperLfloor_int;
	public static int mathHelperAbs = mathHelperAbs_int;
	public static int mathHelperAbs_max = mathHelperAbs_max_int;
	public static int mathHelperIntFloorDiv = mathHelperIntFloorDiv_int;
	public static int mathHelperStringNullOrLengthZero = mathHelperStringNullOrLengthZero_int;
	public static int mathHelperGetRandomIntegerInRange = mathHelperGetRandomIntegerInRange_int;
	public static int threadDownloadImageDataGetGlTextureId = threadDownloadImageDataGetGlTextureId_int;
	public static int netClientHandlerGetNetManager = netClientHandlerGetNetManager_int;
	public static int modelBaseBoxList = modelBaseBoxList_int;
	public static int modelBaseTextureWidth = modelBaseTextureWidth_int;
	public static int modelBaseTextureHeight = modelBaseTextureHeight_int;
	public static int modelRightArm = modelRightArm_int;
	public static int modelBipedBipedRightArm = modelBipedBipedRightArm_int;
	public static int modelQuadrupedLeg1 = modelQuadrupedLeg1_int;
	public static int modelCreeperLeg1 = modelCreeperLeg1_int;
	public static int modelBatBatRightWing = modelBatBatRightWing_int;
	public static int modelChickenRightWing = modelChickenRightWing_int;
	public static int modelBlazeBlazeSticks = modelBlazeBlazeSticks_int;
	public static int modelHorseFrontRightLeg = modelHorseFrontRightLeg_int;
	public static int modelIronGolemIronGolemRightArm = modelIronGolemIronGolemRightArm_int;
	public static int modelGhastTentacles = modelGhastTentacles_int;
	public static int modelOcelotOcelotFrontRightLeg = modelOcelotOcelotFrontRightLeg_int;
	public static int modelSnowManRightHand = modelSnowManRightHand_int;
	public static int modelSpiderSpiderLeg1 = modelSpiderSpiderLeg1_int;
	public static int modelSquidSquidTentacles = modelSquidSquidTentacles_int;
	public static int modelWolfWolfLeg1 = modelWolfWolfLeg1_int;
	public static int renderEngineDeleteTexture = renderEngineDeleteTexture_int;
	public static int resourceLocationGetResourceDomain = resourceLocationGetResourceDomain_int;
	public static int resourceLocationGetResourcePath = resourceLocationGetResourcePath_int;
	public static int scaledresolutionGetScaleFactor = scaledresolutionGetScaleFactor_int;
	public static int scaledresolutionGetScaledWidth = scaledresolutionGetScaledWidth_int;
	public static int scaledresolutionGetScaledHeight = scaledresolutionGetScaledHeight_int;
	public static int framebufferBindFramebuffer = framebufferBindFramebuffer_int;
	public static int framebufferUnbindFramebuffer = framebufferUnbindFramebuffer_int;
	public static int framebufferFramebufferRender = framebufferFramebufferRender_int;
	public static int gameSettingsAnaglyph = gameSettingsAnaglyph_int;
	public static int tessellatorAddVertex = tessellatorAddVertex_int;
	public static int minecraftLaunchedVersion = minecraftGetLaunchedVersion_int;
	public static int movingObjectPositionBlockPosGetX = movingObjectPositionBlockPosGetX_int;
	public static int movingObjectPositionBlockPosGetY = movingObjectPositionBlockPosGetY_int;
	public static int movingObjectPositionBlockPosGetZ = movingObjectPositionBlockPosGetZ_int;
	public static int getBipedArmor = getBipedArmor_int;
	public static int worldGetBlock = worldGetBlock_int;
	public static int facingOffsetsXForSide = facingOffsetsXForSide_int;
	public static int facingOffsetsYForSide = facingOffsetsYForSide_int;
	public static int facingOffsetsZForSide = facingOffsetsZForSide_int;
	public static int itemStackHasDisplayName = itemStackHasDisplayName_int;
	public static int entitySetCustomNameTag = entitySetCustomNameTag_int;
	public static int itemStackGetDisplayName = itemStackGetDisplayName_int;
	public static int movingObjectPositionTypeOfHit = movingObjectPositionTypeOfHit_int;
	public static int movingObjectPositionMovingObjectTypeMISS = movingObjectPositionMovingObjectTypeMISS_int;
	public static int movingObjectPositionMovingObjectTypeBLOCK = movingObjectPositionMovingObjectTypeBLOCK_int;
	public static int movingObjectPositionMovingObjectTypeENTITY = movingObjectPositionMovingObjectTypeENTITY_int;
	public static int worldIsBlockModifiable = worldIsBlockModifiable_int;
	public static int movingObjectPositionSideHit = movingObjectPositionSideHit_int;
	public static int entityPlayerCanPlayerEdit = entityPlayerCanPlayerEdit_int;
	public static int entityPlayerMPPlayerNetServerHandler = entityPlayerMPPlayerNetServerHandler_int;
	public static int entitySetLocationAndAngles = entitySetLocationAndAngles_int;
	public static int worldRand = worldRand_int;
	public static int mathHelperWrapAngleTo180_float = mathHelperWrapAngleTo180_float_int;
	public static int blockPosGetX = blockPosGetX_int;
	public static int blockPosGetY = blockPosGetY_int;
	public static int blockPosGetZ = blockPosGetZ_int;
	public static int iBlockStateGetBlock = iBlockStateGetBlock_int;
	public static int worldGetBlockState = worldGetBlockState_int;
	public static int worldGetBlockStateGetBlockMetadata = worldGetBlockStateGetBlockMetadata_int;
	public static int newBlockPos = newBlockPos_int;
	public static int tileEntityXCoord = tileEntityXCoord_int;
	public static int tileEntityYCoord = tileEntityYCoord_int;
	public static int tileEntityZCoord = tileEntityZCoord_int;
	public static int entityPlayerMPOpenContainer = entityPlayerMPOpenContainer_int;
	public static int worldGetBlockLightValue = worldGetBlockLightValue_int;
	public static int containerInventorySlots = containerInventorySlots_int;
	public static int worldGetStrongPower = worldGetStrongPower_int;
	public static int containerGetSlot = containerGetSlot_int;
	public static int slotGetStack = slotGetStack_int;
	public static int containerInventoryItemStacks = containerInventoryItemStacks_int;
	public static int pathNavigateTryMoveToXYZ = pathNavigateTryMoveToXYZ_int;
	public static int worldGetEntityByID = worldGetEntityByID_int;
	public static int entityListStringToClassMapping = entityListStringToClassMapping_int;
	public static int entityListClassToStringMapping = entityListClassToStringMapping_int;
	public static int entityListIDtoClassMapping = entityListIDtoClassMapping_int;
	public static int entityListClassToIDMapping = entityListClassToIDMapping_int;
	public static int entityLivingBaseGetLook = entityLivingBaseGetLook_int;
	public static int vec3AddVector = vec3AddVector_int;
	public static int worldGetEntitiesWithinAABBExcludingEntity = worldGetEntitiesWithinAABBExcludingEntity_int;
	public static int entityGetBoundingBox = entityGetBoundingBox_int;
	public static int entityCanBeCollidedWith = entityCanBeCollidedWith_int;
	public static int entityGetCollisionBorderSize = entityGetCollisionBorderSize_int;
	public static int axisAlignedBBCalculateIntercept = axisAlignedBBCalculateIntercept_int;
	public static int axisAlignedBBIsVecInside = axisAlignedBBIsVecInside_int;
	public static int movingObjectPositionHitVec = movingObjectPositionHitVec_int;
	public static int vec3SquareDistanceTo = vec3SquareDistanceTo_int;
	public static int itemPotionGetEffects = itemPotionGetEffects_int;
	public static int itemStackGetAttributeModifiers = itemStackGetAttributeModifiers_int;
	public static int sharedMonsterAttributesAttackDamage = sharedMonsterAttributesAttackDamage_int;
	public static int iAttributeGetAttributeUnlocalizedName = iAttributeGetAttributeUnlocalizedName_int;
	public static int attributeModifierGetAmount = attributeModifierGetAmount_int;
	public static int itemArmorGetArmorMaterial = itemArmorGetArmorMaterial_int;
	public static int itemArmorArmorMaterialGetName = itemArmorArmorMaterialGetName_int;
	public static int renderManagerSkinMap = renderManagerSkinMap_int;
	public static int minecraftLoadingScreen = minecraftLoadingScreen_int;
	public static int loadingScreenDisplayLoadingString = loadingScreenDisplayLoadingString_int;
	public static int loadingScreenResetProgressAndMessage = loadingScreenResetProgressAndMessage_int;
	public static int loadingScreenSetLoadingProgress = loadingScreenSetLoadingProgress_int;
	public static int openGlHelperGlBlendFunc = openGlHelperGlBlendFunc_int;
	public static int guiScreenFunc_175273_b = guiScreenFunc_175273_b_int;
	public static int minecraftUpdateFramebufferSize = minecraftUpdateFramebufferSize_int;
	public static int itemCameraTransformsTransformTypeNONE = itemCameraTransformsTransformTypeNONE_int;
	public static int itemCameraTransformsTransformTypeTHIRD_PERSON = itemCameraTransformsTransformTypeTHIRD_PERSON_int;
	public static int itemCameraTransformsTransformTypeFIRST_PERSON = itemCameraTransformsTransformTypeFIRST_PERSON_int;
	public static int itemCameraTransformsTransformTypeHEAD = itemCameraTransformsTransformTypeHEAD_int;
	public static int itemCameraTransformsTransformTypeGUI = itemCameraTransformsTransformTypeGUI_int;
	public static int entityPlayerFishEntity = entityPlayerFishEntity_int;
	public static int entityZombieIsVillager = entityZombieIsVillager_int;
	public static int entityZombieSetVillager = entityZombieSetVillager_int;
	public static int tileEntitySkullUpdateGameprofile = tileEntitySkullUpdateGameprofile_int;
	public static int nBTUtilWriteGameProfile = nBTUtilWriteGameProfile_int;
	public static int nbtTagCompoundSetTag = nbtTagCompoundSetTag_int;
	public static int enumFacingUP = enumFacingUP_int;
	public static int enumFacingDOWN = enumFacingDOWN_int;
	public static int enumFacingEAST = enumFacingEAST_int;
	public static int enumFacingNORTH = enumFacingNORTH_int;
	public static int enumFacingSOUTH = enumFacingSOUTH_int;
	public static int enumFacingWEST = enumFacingWEST_int;
	public static int itemStackGetMetadata = itemStackGetMetadata_int;
	public static int minecraftGetBlockRendererDispatcher = minecraftGetBlockRendererDispatcher_int;
	public static int textureMapLocationBlocksTexture = textureMapLocationBlocksTexture_int;
	public static int blockGetDefaultState = blockGetDefaultState_int;
	public static int blockRendererDispatcherRenderBlockBrightness = blockRendererDispatcherRenderBlockBrightness_int;
	public static int iBlockStateWithProperty = iBlockStateWithProperty_int;
	public static int blockDoublePlantVARIANT = blockDoublePlantVARIANT_int;
	public static int blockDoublePlantHALF = blockDoublePlantHALF_int;
	public static int blockGetMetaFromState = blockGetMetaFromState_int;
	public static int itemGetMetadata = itemGetMetadata_int;
	public static int blockColorMultiplier = blockColorMultiplier_int;
	public static int textureUtilAnaglyphColor = textureUtilAnaglyphColor_int;
	public static int blockGetStateFromMeta = blockGetStateFromMeta_int;
	public static int blockRendererDispatcherGetBakedModel = blockRendererDispatcherGetBakedModel_int;
	public static int blockRendererDispatcherGetBlockModelRenderer = blockRendererDispatcherGetBlockModelRenderer_int;
	public static int blockModelRendererRenderModelBrightness = blockModelRendererRenderModelBrightness_int;
	public static int abstractClientPlayerGetSkinType = abstractClientPlayerGetSkinType_int;
	public static int renderLivingFunc_110827_b = renderLivingFunc_110827_b_int;
	public static int renderLivingFunc_110813_b = renderLivingFunc_110813_b_int;
	public static int minecraftGetRenderItem = minecraftGetRenderItem_int;
	public static int renderItemGetItemModelMesher = renderItemGetItemModelMesher_int;
	public static int newModelResourceLocation = newModelResourceLocation_int;
	public static int itemModelMesherRegister = itemModelMesherRegister_int;
	public static int pathNavigateGroundFunc_179690_a = pathNavigateGroundFunc_179690_a_int;
	public static int entityLivingTasks = entityLivingTasks_int;
	public static int entityAITasksAddTask = entityAITasksAddTask_int;
	public static int entityTameableAiSit = entityTameableAiSit_int;
	public static int entityOnUpdate = entityOnUpdate_int;
	public static int entityPlayerPreparePlayerToSpawn = entityPlayerPreparePlayerToSpawn_int;
	public static int entityClientPlayerMPSendQueue = entityClientPlayerMPSendQueue_int;
	public static int netClientHandlerHandleClientCommand = netClientHandlerHandleClientCommand_int;
	public static int worldRemoveEntity = worldRemoveEntity_int;
	public static int entityClientPlayerMPFunc_142021_k = entityClientPlayerMPFunc_142021_k_int;
	public static int entityClientPlayerMPFunc_142020_c = entityClientPlayerMPFunc_142020_c_int;
	public static int serverConfigurationManagerRespawnPlayer = serverConfigurationManagerRespawnPlayer_int;
	public static int minecraftServerGetConfigurationManager = minecraftServerGetConfigurationManager_int;
	public static int minecraftMyNetworkManager = minecraftMyNetworkManager_int;
	public static int minecraftGetIntegratedServer = minecraftGetIntegratedServer_int;
	public static int entityLivingGetCurrentArmor = entityLivingGetCurrentArmor_int;
	public static int minecraftServerGetFile = minecraftServerGetFile_int;
	public static int isPumpkin = isPumpkin_int;
	public static int rendererLivingEntitySetRenderPassModel = rendererLivingEntitySetRenderPassModel_int;
	public static int renderPlayerSmallArms = renderPlayerSmallArms_int;
	public static int pathNavigateGetPathToEntityLiving = pathNavigateGetPathToEntityLiving_int;
	public static int pathNavigateSetPath = pathNavigateSetPath_int;
	public static int pathNavigateClearPathEntity = pathNavigateClearPathEntity_int;
	public static int modelRendererCubeList = modelRendererCubeList_int;
	public static int modelRendererTextureOffsetX = modelRendererTextureOffsetX_int;
	public static int modelRendererTextureOffsetY = modelRendererTextureOffsetY_int;
	public static int modelRendererChildModels = modelRendererChildModels_int;
	public static int modelRendererBoxName = modelRendererBoxName_int;
	public static int modelRendererTextureHeight = modelRendererTextureHeight_int;
	public static int modelRendererTextureWidth = modelRendererTextureWidth_int;
	public static int modelRendererBaseModel = modelRendererBaseModel_int;
	public static int modelRendererCompiled = modelRendererCompiled_int;
	public static int entityIsInWeb = entityIsInWeb_int;
	public static int entityLivingBaseIsSwingInProgress = entityLivingBaseIsSwingInProgress_int;
	public static int entityIsBurning = entityIsBurning_int;
	public static int entityIsSprinting = entityIsSprinting_int;
	public static int entityLivingGetLeashed = entityLivingGetLeashed_int;
	public static int entityListGetEntityString = entityListGetEntityString_int;
	public static int worldInfoGetWorldTotalTime = worldInfoGetWorldTotalTime_int;
	public static int worldInfoGetWorldTime = worldInfoGetWorldTime_int;
	public static int worldGetMoonPhase = worldGetMoonPhase_int;
	public static int entityLivingSetCurrentItemOrArmor = entityLivingSetCurrentItemOrArmor_int;
	public static int entitySetVelocity = entitySetVelocity_int;
	public static int entitySetSneaking = entitySetSneaking_int;
	public static int openGlHelperSetLightmapTextureCoords = openGlHelperSetLightmapTextureCoords_int;
	public static int entityTameableSetTamed = entityTameableSetTamed_int;
	public static int entityAgeableSetGrowingAge = entityAgeableSetGrowingAge_int;
	public static int chatAllowedCharactersFilterAllowedCharacters = chatAllowedCharactersFilterAllowedCharacters_int;
	public static int guiSlotHandleMouseInput = guiSlotHandleMouseInput_int;
	public static int newDataParameter = newDataParameter_int;
	public static int newSoundEvent = newSoundEvent_int;
	public static int newResourceLocation = newResourceLocation_int;
	public static int mathHelperClamp = mathHelperClamp_int;
	public static int itemSetRegistryName = itemSetRegistryName_int;
	public static int entityLivingOnInitialSpawn = entityLivingOnInitialSpawn_int;
	public static int modelRendererAddChild = modelRendererAddChild_int;

}
