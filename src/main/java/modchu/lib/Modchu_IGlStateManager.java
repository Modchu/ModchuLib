package modchu.lib;

import java.nio.IntBuffer;

public interface Modchu_IGlStateManager {
	public void pushMatrix();
	public void ortho(int i, int width, int j, int height, int k, int l);
	public void ortho(double d, double width, double height, double e, double f, double g);
	public void clearColor(float f, float f1, float f2, float f3);
	public void clear(int i);
	public void popMatrix();
	public void generateTexture();
	public void enableTexture2D();
	public void enableBlend();
	public void matrixMode(int i);
	public void loadIdentity();
	public void enableDepth();
	public void alphaFunc(int i, float f);
	public void translate(float f, float f1, float f2);
	public void disableLighting();
	public void disableFog();
	public void disableDepth();
	public void viewport(int i, int j, int width, int height);
	public void color(float r, float g, float b, float a);
	public void enableAlpha();
	public void pushAttrib();
	public void popAttrib();
	public void disableAlpha();
	public void enableLighting();
	public void enableLight(int p_179085_0_);
	public void disableLight(int p_179122_0_);
	public void enableColorMaterial();
	public void disableColorMaterial();
	public void colorMaterial(int p_179104_0_, int p_179104_1_);
	public void depthFunc(int p_179143_0_);
	public void depthMask(boolean p_179132_0_);
	public void disableBlend();
	public void blendFunc(int p_179112_0_, int p_179112_1_);
	public void tryBlendFuncSeparate(int p_179120_0_, int p_179120_1_, int p_179120_2_, int p_179120_3_);
	public void enableFog();
	public void setFogDensity(float p_179095_0_);
	public void setFogStart(float p_179102_0_);
	public void setFogEnd(float p_179153_0_);
	public void enableCull();
	public void disableCull();
	public void enablePolygonOffset();
	public void disablePolygonOffset();
	public void doPolygonOffset(float p_179136_0_, float p_179136_1_);
	public void enableColorLogic();
	public void disableColorLogic();
	public void colorLogicOp(int p_179116_0_);
	public void enableTexGenCoord(Object glStateManagerTexGen);
	public void disableTexGenCoord(Object glStateManagerTexGen);
	public void texGen(Object glStateManagerTexGen, int p_179149_1_);
	public void texGen(Object glStateManagerTexGen, int p_179105_1_, Object floatBuffer);
	public void disableTexture2D();
	public void deleteTexture(int p_179150_0_);
	public void bindTexture(int p_179144_0_);
	public void enableNormalize();
	public void disableNormalize();
	public void shadeModel(int p_179103_0_);
	public void enableRescaleNormal();
	public void disableRescaleNormal();
	public void colorMask(boolean p_179135_0_, boolean p_179135_1_, boolean p_179135_2_, boolean p_179135_3_);
	public void clearDepth(double p_179151_0_);
	public void getFloat(int p_179111_0_, Object p_179111_1_);
	public void rotate(float p_179114_0_, float p_179114_1_, float p_179114_2_, float p_179114_3_);
	public void scale(float p_179152_0_, float p_179152_1_, float p_179152_2_);
	public void scale(double p_179139_0_, double p_179139_2_, double p_179139_4_);
	public void translate(double p_179137_0_, double p_179137_2_, double p_179137_4_);
	public void multMatrix(Object p_179110_0_);
	public void color(float p_179124_0_, float p_179124_1_, float p_179124_2_);
	public void resetColor();
	public void callList(int p_179148_0_);
	public void glLight(int light, int pname, Object floatBuffer);
	public void glLightModel(int pname, Object floatBuffer);
	public void glNormal3f(float nx, float ny, float nz);
	public void blendFunc(Object sourceFactor, Object destFactor);
	public void tryBlendFuncSeparate(Object sourceFactor, Object destFactor, Object sourceFactor1, Object destFactor1);
	public void glBlendEquation(int blendEquation);
	public void enableOutlineMode(int p_187431_0_);
	public void disableOutlineMode();
	public void setFog(Object fogMode);
	public void glFog(int pname, Object floatBuffer);
	public void glFogi(int pname, int param);
	public void cullFace(Object cullFace);
	public void glPolygonMode(int face, int mode);
	public void colorLogicOp(Object logicOp);
	public void setActiveTexture(int texture);
	public void glTexEnv(int target, int parameterName, Object floatBuffer);
	public void glTexEnvi(int target, int parameterName, int parameter);
	public void glTexEnvf(int target, int parameterName, float parameter);
	public void glTexParameterf(int target, int parameterName, float parameter);
	public void glTexParameteri(int target, int parameterName, int parameter);
	public int glGetTexLevelParameteri(int target, int level, int parameterName);
	public void glTexImage2D(int target, int level, int internalFormat, int width, int height, int border, int format, int type, Object nullable);
	public void glTexSubImage2D(int target, int level, int xOffset, int yOffset, int width, int height, int format, int type, IntBuffer pixels);
	public void glCopyTexSubImage2D(int target, int level, int xOffset, int yOffset, int x, int y, int width, int height);
	public void glGetTexImage(int target, int level, int format, int type, IntBuffer pixels);
	public void rotate(Object quaternion);
	public Object quatToGlMatrix(Object floatBuffer, Object quaternion);
	public void glTexCoord2f(float sCoord, float tCoord);
	public void glVertex3f(float x, float y, float z);
	public void glNormalPointer(int type, int stride, Object byteBuffer);
	public void glTexCoordPointer(int size, int type, int stride, int buffer_offset);
	public void glTexCoordPointer(int size, int type, int stride, Object byteBuffer);
	public void glVertexPointer(int size, int type, int stride, int buffer_offset);
	public void glVertexPointer(int size, int type, int stride, Object byteBuffer);
	public void glColorPointer(int size, int type, int stride, int buffer_offset);
	public void glColorPointer(int size, int type, int stride, Object byteBuffer);
	public void glDisableClientState(int cap);
	public void glEnableClientState(int cap);
	public void glBegin(int mode);
	public void glEnd();
	public void glDrawArrays(int mode, int first, int count);
	public void glLineWidth(float width);
	public void glDeleteLists(int list, int range);
	public void glNewList(int list, int mode);
	public void glEndList();
	public int glGenLists(int range);
	public void glPixelStorei(int parameterName, int param);
	public void glReadPixels(int x, int y, int width, int height, int format, int type, IntBuffer pixels);
	public int glGetError();
	public String glGetString(int name);
	public void glGetInteger(int parameterName, IntBuffer parameters);
	public int glGetInteger(int parameterName);
	public void enableBlendProfile(Object profile);
	public void disableBlendProfile(Object profile);

}
