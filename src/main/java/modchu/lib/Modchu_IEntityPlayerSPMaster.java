package modchu.lib;

import java.util.Random;
import java.util.UUID;

public interface Modchu_IEntityPlayerSPMaster {

	public void init();
	public void wakeUpPlayer(boolean flag, boolean flag1, boolean flag2);
	public void preparePlayerToSpawn();
	public void setPositionCorrection(double par1, double par3, double par5);
	public void onLivingUpdate();
	public void moveEntityWithHeading(float f, float f1);
	public String getHurtSound();
	public Object getCreatureAttribute();
	public double getMountedYOffset();
	public void resetHeight();
	public double getYOffset();
	public boolean pushOutOfBlocks(double d, double d1, double d2);
	public boolean isEntityInsideOpaqueBlock();
	public Object copyPlayer(Object entityplayer);
	public Object copyInventory(Object inventoryplayer);
	public void setSize(float f, float f1);
	public void updateRidden();
	public boolean attackEntityFrom(Object var1, Object damageSource, int i);
	public boolean attackEntityFrom(Object damageSource, int i);
	public void onDeath(Object damageSource);
	public void sendMotionUpdates();
	public float getMaxHealth();
	public int getMaxHealthInt();
	public float getHealth();
	public int getHealthInt();
	public void setHealth(float f);
	public void setHealthInt(int i);
	public boolean attackEntityFrom(Object damageSource, float par2);
	public void heal(float par1);
	public void onUpdate();
	public Object dropOneItem(boolean par1);
	public void joinEntityItemWithWorld(Object entityItem);
	public void sendChatMessage(String par1Str);
	public void swingItem();
	public void respawnPlayer();
	public void damageEntity(Object damageSource, float par2);
	public void closeScreen();
	public void func_92015_f();
	public void setPlayerSPHealth(float par1);
	public void addStat(Object statBase, int par2);
	public void incrementStat(Object statBase, int par2);
	public void sendPlayerAbilities();
	public void func_110318_g();
	public void func_110322_i();
	public void func_142020_c(String par1Str);
	public String func_142021_k();
	public void updateEntityActionState();
	public float getFOVMultiplier();
	public void displayGUIEditSign(Object tileEntity);
	public void displayGUIBook(Object itemStack);
	public void displayGUIChest(Object iInventory);
	public void displayGUIHopper(Object tileEntityHopper);
	public void displayGUIHopperMinecart(Object entityMinecartHopper);
	public void displayGUIHorse(Object entityHorse, Object iInventory);
	public void displayGUIWorkbench(int par1, int par2, int par3);
	public void displayGUIEnchantment(int par1, int par2, int par3, String par4Str);
	public void displayGUIAnvil(int par1, int par2, int par3);
	public void displayGUIFurnace(Object tileEntityFurnace);
	public void displayGUIBrewingStand(Object tileEntityBrewingStand);
	public void displayGUIBeacon(Object tileEntityBeacon);
	public void displayGUIDispenser(Object tileEntityDispenser);
	public void displayGUIMerchant(Object iMerchant, String par2Str);
	public void onCriticalHit(Object entity);
	public void onEnchantmentCritical(Object entity);
	public void onItemPickup(Object entity, int par2);
	public boolean isSneaking();
	public void addChatMessage(String par1Str);
	public void setSprinting(boolean par1);
	public void setXPStats(float par1, int par2, int par3);
	public void sendChatToPlayer(Object chatMessageComponent);
	public boolean canCommandSenderUseCommand(int par1, String par2Str);
	public Object getPlayerCoordinates();
	public Object getHeldItem();
	public void playSound(String par1Str, float par2, float par3);
	public boolean isClientWorld();
	public boolean isRidingHorse();
	public float getHorseJumpPower();
	public void setupCustomSkin();
	public Object getTextureSkin();
	public Object getTextureCape();
	public Object getLocationSkin();
	public Object getLocationCape();
	public void applyEntityAttributes();
	public void entityInit();
	public Object getItemInUse();
	public int getItemInUseCount();
	public boolean isUsingItem();
	public int getItemInUseDuration();
	public void stopUsingItem();
	public void clearItemInUse();
	public boolean isBlocking();
	public int getMaxInPortalTime();
	public int getPortalCooldown();
	public void updateItemUse(Object itemStack, int par2);
	public void onItemUseFinish();
	public void handleHealthUpdate(byte par1);
	public boolean isMovementBlocked();
	public void mountEntity(Object entity);
	public int getScore();
	public void setScore(int par1);
	public void addScore(int par1);
	public void addToPlayerScore(Object entity, int par2);
	public Object dropPlayerItem(Object itemStack);
	public Object dropPlayerItemWithRandomChoice(Object itemStack, boolean par2);
	public float getCurrentPlayerStrVsBlock(Object block, boolean par2);
	public float getCurrentPlayerStrVsBlock(Object block, boolean par2, int meta);
	public boolean canHarvestBlock(Object block);
	public void readEntityFromNBT(Object nBTTagCompound);
	public void writeEntityToNBT(Object nBTTagCompound);
	public float getEyeHeight();
	public boolean canAttackPlayer(Object entityPlayer);
	public void damageArmor(float par1);
	public int getTotalArmorValue();
	public float getArmorVisibility();
	public boolean interactWith(Object entity);
	public Object getCurrentEquippedItem();
	public void destroyCurrentEquippedItem();
	public void attackTargetEntityWithCurrentItem(Object entity);
	public void setDead();
	public Object sleepInBedAt(int par1, int par2, int par3);
	public float getBedOrientationInDegrees();
	public boolean isPlayerSleeping();
	public boolean isPlayerFullyAsleep();
	public int getSleepTimer();
	public boolean getHideCape(int par1);
	public void setHideCape(int par1, boolean par2);
	public Object getBedLocation();
	public boolean isSpawnForced();
	public Object getBedLocation(int dimension);
	public boolean isSpawnForced(int dimension);
	public void setSpawnChunk(Object chunkCoordinates, boolean par2);
	public void setSpawnChunk(Object chunkCoordinates, boolean forced, int dimension);
	public void triggerAchievement(Object statBase);
	public void jump();
	public float getAIMoveSpeed();
	public void addMovementStat(double par1, double par3, double par5);
	public void fall(float par1);
	public void onKillEntity(Object entityLivingBase);
	public void setInWeb();
	public Object getItemIcon(Object itemStack, int par2);
	public Object getCurrentArmor(int par1);
	public void addExperience(int par1);
	public void addExperienceLevel(int par1);
	public int xpBarCap();
	public void addExhaustion(float par1);
	public Object getFoodStats();
	public boolean canEat(boolean par1);
	public boolean shouldHeal();
	public void setItemInUse(Object itemStack, int par2);
	public boolean isCurrentToolAdventureModeExempt(int par1, int par2, int par3);
	public boolean canPlayerEdit(int par1, int par2, int par3, int par4, Object itemStack);
	public int getExperiencePoints(Object entityPlayer);
	public boolean isPlayer();
	public String getEntityName();
	public boolean getAlwaysRenderNameTagForRender();
	public void clonePlayer(Object entityPlayer, boolean par2);
	public boolean canTriggerWalking();
	public void setGameType(Object enumGameType);
	public String getCommandSenderName();
	public Object getEntityWorld();
	public Object getInventoryEnderChest();
	public Object getCurrentItemOrArmor(int par1);
	public void setCurrentItemOrArmor(int par1, Object itemStack);
	public boolean isInvisibleToPlayer(Object entityPlayer);
	public Object[] getLastActiveItems();
	public boolean getHideCape();
	public boolean isPushedByWater();
	public Object getWorldScoreboard();
	public Object getTeam();
	public String getTranslatedEntityName();
	public void setAbsorptionAmount(float par1);
	public float getAbsorptionAmount();
	public void openGui(Object mod, int modGuiId, Object world, int x, int y, int z);
	public float getDefaultEyeHeight();
	public Object getDisplayName();
	public void refreshDisplayName();
	public void updateFallState(double par1, boolean par3);
	public boolean canBreatheUnderwater();
	public void onEntityUpdate();
	public boolean isChild();
	public void onDeathUpdate();
	public int decreaseAirSupply(int par1);
	public Random getRNG();
	public Object getAITarget();
	public int func_142015_aE();
	public void setRevengeTarget(Object entityLivingBase);
	public Object getLastAttacker();
	public int getLastAttackerTime();
	public void setLastAttacker(Object entity);
	public int getAge();
	public void updatePotionEffects();
	public void clearActivePotions();
	public Object getActivePotionEffects();
	public boolean isPotionActive(int par1);
	public boolean isPotionActive(Object potion);
	public Object getActivePotionEffect(Object potion);
	public void addPotionEffect(Object potionEffect);
	public boolean isPotionApplicable(Object potionEffect);
	public boolean isEntityUndead();
	public void removePotionEffectClient(int par1);
	public void removePotionEffect(int par1);
	public void onNewPotionEffect(Object potionEffect);
	public void onChangedPotionEffect(Object potionEffect, boolean par2);
	public void onFinishedPotionEffect(Object potionEffect);
	public void renderBrokenItemStack(Object itemStack);
	public void dropEquipment(boolean par1, int par2);
	public void knockBack(Object entity, float par2, double par3, double par5);
	public String getDeathSound();
	public void dropRareDrop(int par1);
	public void dropFewItems(boolean par1, int par2);
	public boolean isOnLadder();
	public boolean isEntityAlive();
	public void performHurtAnimation();
	public float applyArmorCalculations(Object damageSource, float par2);
	public float applyPotionDamageCalculations(Object damageSource, float par2);
	public Object func_110142_aN();
	public Object func_94060_bK();
	public void kill();
	public void updateArmSwingProgress();
	public Object getEntityAttribute(Object attribute);
	public Object getAttributeMap();
	public float getSoundVolume();
	public float getSoundPitch();
	public void setPositionAndUpdate(double par1, double par3, double par5);
	public void dismountEntity(Object entity);
	public boolean isAIEnabled();
	public void setAIMoveSpeed(float par1);
	public boolean attackEntityAsMob(Object entity);
	public float func_110146_f(float par1, float par2);
	public void updateAITasks();
	public void collideWithNearbyEntities();
	public void collideWithEntity(Object entity);
	public void setPositionAndRotation2(double par1, double par3, double par5, float par7, float par8, int par9);
	public void updateAITick();
	public void setJumping(boolean par1);
	public boolean canEntityBeSeen(Object entity);
	public Object getLookVec();
	public Object getLook(float par1);
	public float getSwingProgress(float par1);
	public Object getPosition(float par1);
	public Object rayTrace(double par1, float par3);
	public boolean canBeCollidedWith();
	public boolean canBePushed();
	public void setBeenAttacked();
	public float getRotationYawHead();
	public void setRotationYawHead(float par1);
	public boolean isOnSameTeam(Object entityLivingBase);
	public boolean isOnTeam(Object team);
	public void curePotionEffects(Object itemStack);
	public boolean shouldRiderFaceForward(Object entityPlayer);
	public Object getDataWatcher();
	//public boolean equals(Object par1Obj);
	//public int hashCode();
	public void setRotation(float par1, float par2);
	public void setPosition(double par1, double par3, double par5);
	public void setAngles(float par1, float par2);
	public void setOnFireFromLava();
	public void setFire(int par1);
	public void extinguish();
	public boolean isOffsetPositionInLiquid(double par1, double par3, double par5);
	public void moveEntity(double par1, double par3, double par5);
	public void doBlockCollisions();
	public void playStepSound(int par1, int par2, int par3, int par4);
	public Object getBoundingBox();
	public void dealFireDamage(int par1);
	public boolean isWet();
	public boolean isInWater();
	public boolean handleWaterMovement();
	public boolean isInsideOfMaterial(Object material);
	public boolean handleLavaMovement();
	public void moveFlying(float par1, float par2, float par3);
	public int getBrightnessForRender(float par1);
	public float getBrightness(float par1);
	public void setWorld(Object world);
	public void setPositionAndRotation(double par1, double par3, double par5, float par7, float par8);
	public void setLocationAndAngles(double par1, double par3, double par5, float par7, float par8);
	public float getDistanceToEntity(Object entity);
	public double getDistanceSq(double par1, double par3, double par5);
	public double getDistance(double par1, double par3, double par5);
	public double getDistanceSqToEntity(Object entity);
	public void onCollideWithPlayer(Object entityPlayer);
	public void applyEntityCollision(Object entity);
	public void addVelocity(double par1, double par3, double par5);
	public boolean isInRangeToRenderVec3D(Object vec3);
	public boolean isInRangeToRenderDist(double par1);
	public boolean writeMountToNBT(Object nBTTagCompound);
	public boolean writeToNBTOptional(Object nBTTagCompound);
	public void writeToNBT(Object nBTTagCompound);
	public void readFromNBT(Object nBTTagCompound);
	public boolean shouldSetPosAfterLoading();
	public void onChunkLoad();
	public Object newDoubleNBTList(double... par1ArrayOfDouble);
	public Object newFloatNBTList(float... par1ArrayOfFloat);
	public float getShadowSize();
	public Object dropItem(int par1, int par2);
	public Object dropItemWithOffset(int par1, int par2, float par3);
	public Object entityDropItem(Object itemStack, float par2);
	public boolean interactFirst(Object entityPlayer);
	public Object getCollisionBox(Object entity);
	public void updateRiderPosition();
	public float getCollisionBorderSize();
	public void setInPortal();
	public void setVelocity(double par1, double par3, double par5);
	public boolean isBurning();
	public boolean isRiding();
	public void setSneaking(boolean par1);
	public boolean isSprinting();
	public boolean isInvisible();
	public void setInvisible(boolean par1);
	public boolean isEating();
	public void setEating(boolean par1);
	public boolean getFlag(int par1);
	public void setFlag(int par1, boolean par2);
	public int getAir();
	public void setAir(int par1);
	public void onStruckByLightning(Object entityLightningBolt);
	public Object[] getParts();
	public boolean isEntityEqual(Object entity);
	public boolean canAttackWithItem();
	public boolean hitByEntity(Object entity);
	public String toString();
	public boolean isEntityInvulnerable();
	public void copyLocationAndAnglesFrom(Object entity);
	public void copyDataFrom(Object entity, boolean par2);
	public void travelToDimension(int par1);
	public float getBlockExplosionResistance(Object explosion, Object world, int par3, int par4, int par5, Object block);
	public boolean shouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);
	public int getMaxSafePointTries();
	public int getTeleportDirection();
	public boolean doesEntityNotTriggerPressurePlate();
	public void addEntityCrashInfo(Object crashReportCategory);
	public boolean canRenderOnFire();
	public UUID getUniqueID();
	public Object getEntityData();
	public boolean shouldRiderSit();
	public Object getPickedResult(Object movingObjectPosition);
	public UUID getPersistentID();
	public boolean shouldRenderInPass(int pass);
	public boolean isCreatureType(Object enumCreatureType, boolean forSpawnCount);
	public String registerExtendedProperties(String identifier, Object iExtendedEntityProperties);
	public Object getExtendedProperties(String identifier);
	public boolean canRiderInteract();
	public boolean shouldDismountInWater(Object entity);
	// ~152
	public void heal(int par1);
	public void damageEntity(Object damageSource, int par2);
	public boolean func_71066_bF();
	public void updateCloak();
	public void sendChatToPlayer(String par1Str);
	public boolean func_96122_a(Object entityPlayer);
	public void alertWolves(Object entityLiving, boolean par2);
	public void damageArmor(int par1);
	public float func_82243_bO();
	public void func_82162_bC();
	public boolean canCurrentToolHarvestBlock(int par1, int par2, int par3);
	public boolean func_94062_bN();
	public boolean func_94059_bO();
	public boolean canPickUpLoot();
	public Object getTranslator();
	public String translateString(String par1Str, Object... par2ArrayOfObj);
	public boolean func_98034_c(Object entityPlayer);
	public boolean func_96092_aw();
	public int func_96121_ay();
	public Object getLookHelper();
	public Object getMoveHelper();
	public Object getJumpHelper();
	public Object getNavigator();
	public Object getEntitySenses();
	public Object getLastAttackingEntity();
	public void setLastAttackingEntity(Object entity);
	public Object getAttackTarget();
	public void setAttackTarget(Object entityLiving);
	public boolean canAttackClass(Class par1Class);
	public void eatGrassBonus();
	public boolean isWithinHomeDistanceCurrentPosition();
	public boolean isWithinHomeDistance(int par1, int par2, int par3);
	public void setHomeArea(int par1, int par2, int par3, int par4);
	public Object getHomePosition();
	public float getMaximumHomeDistance();
	public void detachHome();
	public boolean hasHome();
	public String getTexture();
	public int getTalkInterval();
	public void playLivingSound();
	public void spawnExplosionParticle();
	public void setEntityHealth(int par1);
	public int applyArmorCalculations(Object damageSource, int par2);
	public int applyPotionDamageCalculations(Object damageSource, int par2);
	public String getLivingSound();
	public void knockBack(Object entity, int par2, double par3, double par5);
	public int getDropItemId();
	public void setMoveForward(float par1);
	public void func_85033_bc();
	public boolean canDespawn();
	public void despawnEntity();
	public int getVerticalFaceSpeed();
	public void faceEntity(Object entity, float par2, float par3);
	public boolean getCanSpawnHere();
	public float getRenderSizeModifier();
	public int getMaxSpawnedInChunk();
	public void onChangedPotionEffect(Object potionEffect);
	public float getSpeedModifier();
	public int func_82143_as();
	public void initCreature();
	public boolean canBeSteered();
	public void func_94058_c(String par1Str);
	public String func_94057_bL();
	public boolean func_94056_bM();
	public void func_94061_f(boolean par1);
	public void func_96120_a(int par1, float par2);
	public void setCanPickUpLoot(boolean par1);
	public boolean func_104002_bU();
	public boolean addNotRiddenEntityID(Object nBTTagCompound);
	public boolean addEntityID(Object nBTTagCompound);
	public boolean interact(Object entityPlayer);
	public void unmountEntity(Object entity);
	public boolean func_85031_j(Object entity);
	public void func_82149_j(Object entity);
	public float func_82146_a(Object explosion, Object world, int par3, int par4, int par5, Object block);
	public boolean func_96091_a(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);
	public void func_85029_a(Object crashReportCategory);
	// 172~
	public void closeScreenNoPacket();
	public Object getStatFileWriter();
	public void func_146100_a(Object tileEntity);
	public void func_146095_a(Object commandBlockLogic);
	public void func_146093_a(Object tileEntityHopper);
	public void func_146104_a(Object tileEntityBeacon);
	public void func_146102_a(Object tileEntityDispenser);
	public void func_146098_a(Object tileEntityBrewingStand);
	public void func_146101_a(Object tileEntityFurnace);
	public void addChatMessage(Object iChatComponent);
	public void addChatComponentMessage(Object iChatComponent);
	public String getSplashSound();
	public String getSwimSound();
	public float getBreakSpeed(Object block, boolean p_146096_2_, int meta);
	public float getBreakSpeed(Object block, boolean p_146096_2_, int meta, int x, int y, int z);
	public Object func_146097_a(Object itemStack, boolean p_146097_2_, boolean p_146097_3_);
	public Object getGameProfile();
	public String func_146067_o(int p_146067_1_);
	public Object getEquipmentInSlot(int par1);
	public Object func_145748_c_();
	public boolean func_146066_aG();
	public int getEntityId();
	public void setEntityId(int p_145769_1_);
	public void func_145780_a(int p_145780_1_, int p_145780_2_, int p_145780_3_, Object block);
	public void func_145775_I();
	public boolean isInRangeToRender3d(double p_145770_1_, double p_145770_3_, double p_145770_5_);
	public Object func_145778_a(Object item, int p_145778_2_, float p_145778_3_);
	public Object dropItem(Object item, int p_145779_2_);
	public float func_145772_a(Object explosion, Object world, int p_145772_3_, int p_145772_4_, int p_145772_5_, Object block);
	public boolean func_145774_a(Object explosion, Object world, int p_145774_3_, int p_145774_4_, int p_145774_5_, Object block, float p_145774_7_);
	public void func_145781_i(int p_145781_1_);
	// 179~
	public boolean func_152122_n();
	public boolean func_152123_o();
	public void func_152121_a(Object type, Object resourceLocation);
	public void func_152111_bt();
	public void func_152112_bu();
	// 180~
	public void onUpdateWalkingPlayer();
	public void func_175159_q();
	public boolean isUser();
	public void sendHorseJump();
	public void sendHorseInventory();
	public void setClientBrand(String brand);
	public String getClientBrand();
	public boolean canUseCommand(int permLevel, String commandName);
	public Object getPosition();
	public boolean isServerWorld();
	public void openEditSign(Object tileEntitySign);
	public void openEditCommandBlock(Object commandBlockLogic);
	public void displayGui(Object iInteractionObject);
	public void displayVillagerTradeGui(Object iMerchant);
	public boolean isCurrentViewEntity();
	public boolean isSpectator();
	public boolean hasPlayerInfo();
	public Object getPlayerInfo();
	public boolean hasSkin();
	public String getSkinType();
	public float getFovModifier();
	public Object dropItem(Object itemStack, boolean dropAround, boolean traceItem);
	public float getToolDigEfficiency(Object block);
	public float getBreakSpeed(Object iBlockState, Object blockPos);
	public Object trySleep(Object blockPos);
	public void setSpawnPoint(Object blockPos, boolean forced);
	public void func_175145_a(Object statBase);
	public void fall(float distance, float damageMultiplier);
	public String getFallSoundString(int damageValue);
	public int getXPSeed();
	public void removeExperienceLevel(int levels);
	public boolean isAllowEdit();
	public boolean canPlayerEdit(Object blockPos, Object enumFacing, Object itemStack);
	public String getName();
	public Object[] getInventory();
	public boolean canOpen(Object lockCode);
	public boolean func_175148_a(Object enumPlayerModelParts);
	public boolean sendCommandFeedback();
	public boolean replaceItemInInventory(int p_174820_1_, Object itemStack);
	public boolean hasReducedDebug();
	public void setReducedDebug(boolean reducedDebug);
	public String getDisplayNameString();
	public void onKillCommand();
	public void func_180433_a(double p_180433_1_, boolean p_180433_3_, Object block, Object blockPos);
	public int getRevengeTimer();
	public void func_175135_B();
	public void func_175133_bi();
	public void addRandomArmor();
	public Object getCombatTracker();
	public float func_175134_bD();
	public void func_180466_bG();
	public void func_180426_a(double p_180426_1_, double p_180426_3_, double p_180426_5_, float p_180426_7_, float p_180426_8_, int p_180426_9_, boolean p_180426_10_);
	public void func_175136_bO();
	public void playStepSound(Object blockPos, Object block);
	public boolean isSilent();
	public void setSilent(boolean isSilent);
	public void spawnRunningParticles();
	public void createRunningParticles();
	public boolean isInLava();
	public void moveToBlockPosAndAngles(Object blockPos, float p_174828_2_, float p_174828_3_);
	public double getDistanceSq(Object blockPos);
	public double getDistanceSqToCenter(Object blockPos);
	public Object getPositionEyes(float p_174824_1_);
	public Object dropItemWithOffset(Object item, int size, float p_145778_3_);
	public boolean isEntityInvulnerable(Object damageSource);
	public void copyDataFromOld(Object entity);
	public float getExplosionResistance(Object explosion, Object world, Object blockPos, Object iBlockState);
	public boolean func_174816_a(Object explosion, Object world, Object blockPos, Object iBlockState, float p_174816_5_);
	public int getMaxFallHeight();
	public void setCustomNameTag(String p_96094_1_);
	public String getCustomNameTag();
	public boolean hasCustomName();
	public void setAlwaysRenderNameTag(boolean p_174805_1_);
	public boolean getAlwaysRenderNameTag();
	public Object getHorizontalFacing();
	public Object func_174823_aP();
	public boolean func_174827_a(Object entityPlayerMP);
	public Object getEntityBoundingBox();
	public void setEntityBoundingBox(Object axisAlignedBB);
	public boolean isOutsideBorder();
	public void setOutsideBorder(boolean p_174821_1_);
	public Object getPositionVector();
	public Object getCommandSenderEntity();
	public void setCommandStat(Object type, int amount);
	public Object func_174807_aT();
	public void func_174817_o(Object entity);
	public Object func_174819_aU();
	public void func_174834_g(Object nBTTagCompound);
	public boolean func_174825_a(Object entityPlayer, Object vec3);
	public boolean func_180427_aV();
	public void func_174815_a(Object entityLivingBase, Object entity);
}
