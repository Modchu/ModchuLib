package modchu.lib;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.ArrayList;public class Modchu_ThreadVersionCheck extends Thread {	public String urlString = "https://raw.githubusercontent.com/Modchu/hp/master/ModchuLib";	public void run() {		if (urlString != null				&& !urlString.isEmpty()); else return;		HttpURLConnection var1 = null;		try {			String s = Modchu_Version.getMinecraftVersionString();			if (s != null) {				URL var2 = new URL((new StringBuilder()).append(urlString).append(s).append(".txt").toString());				var1 = (HttpURLConnection) var2.openConnection();				var1.setDoInput(true);				var1.setDoOutput(false);				var1.connect();				try {					InputStream var3 = var1.getInputStream();					String var4 = readInputStream(var3);					//Modchu_Debug.lDebug("Modchu_ThreadVersionCheck Version read. var4=" + var4);					//Modchu_ClipboardManager.setClipboard(var4);					var3.close();					if (var4 != null); else return;					if (var4.length() < 2							| var4.length() > 4) return;					String s1 = var4.indexOf("\n\r") > -1 ? "\n\r" : "\n";					String[] var5 = var4.split(s1);					if (var5.length < 1) return;					String var6 = var5[0];					checkRelease(var6);				} finally {					if (var1 != null) var1.disconnect();				}			}		} catch (Exception e) {		}	}	protected String readInputStream(InputStream var0, String var1) throws IOException {		InputStreamReader var2 = new InputStreamReader(var0, var1);		BufferedReader var3 = new BufferedReader(var2);		StringBuffer var4 = new StringBuffer();		while (true) {			String var5 = var3.readLine();			if (var5 == null) {				return var4.toString();			}			var4.append(var5);			var4.append("\n");		}	}	protected String readInputStream(InputStream var0) throws IOException {		return readInputStream(var0, "ASCII");	}	protected void checkRelease(String s) {		Modchu_Debug.lDebug("Modchu_ThreadVersionCheck checkRelease Version="+s);		if (Modchu_Main.checkRelease(s)) Modchu_Main.setNewRelease(s);	}}