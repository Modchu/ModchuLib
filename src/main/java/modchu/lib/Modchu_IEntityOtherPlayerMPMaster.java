package modchu.lib;

import java.util.Collection;

public interface Modchu_IEntityOtherPlayerMPMaster extends Modchu_IEntityLivingBaseMaster {
	public void sendChatToPlayer(String par1Str);
	public int getMaxHealth();
	public boolean canAttackPlayer(Object entityPlayer);
	public void alertWolves(Object entityLiving, boolean par2);
	public float getArmorVisibility();
	public boolean func_71066_bF();
	public boolean canCurrentToolHarvestBlock(int par1, int par2, int par3);
	public Object getTranslator();
	public String translateString(String par1Str, Object... par2ArrayOfObj);
	public int getHealthInt();
	public boolean interactWith(Object entityPlayer);

	public void sendChatToPlayer(Object chatMessageComponent);
	public void setupCustomSkin();
	public Object getTextureSkin();
	public Object getTextureCape();
	public Object dropPlayerItem(Object itemStack);
	public float getCurrentPlayerStrVsBlock(Object block, boolean par2, int meta);
	public void displayGUIHopper(Object tileEntityHopper);
	public void displayGUIFurnace(Object tileEntityFurnace);
	public void displayGUIDispenser(Object tileEntityDispenser);
	public void displayGUIEditSign(Object tileEntity);
	public void displayGUIBrewingStand(Object tileEntityBrewingStand);
	public void displayGUIBeacon(Object tileEntityBeacon);
	public void addChatMessage(String par1Str);
	public String getEntityName();
	public Object getCurrentItemOrArmor(int par1);
	public void playStepSound(int par1, int par2, int par3, int par4);
	public boolean isInRangeToRenderVec3D(Object vec3);
	public boolean shouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);

	public Object getPlayerCoordinates();
	public boolean hasPlayerInfo();
	public boolean hasSkin();
	public void func_152121_a(Object type, Object resourceLocation);
	public Object dropItem(Object itemStack, boolean p_146097_2_, boolean p_146097_3_);
	public float getCurrentPlayerStrVsBlock(Object block, boolean p_146096_2_);
	public float getBreakSpeed(Object block, boolean p_146096_2_, int meta);
	public float getBreakSpeed(Object block, boolean p_146096_2_, int meta, int x, int y, int z);
	public void func_146093_a(Object tileEntityHopper);
	public void displayGUIHopperMinecart(Object entityMinecartHopper);
	public void displayGUIEnchantment(int p_71002_1_, int p_71002_2_, int p_71002_3_, String p_71002_4_);
	public void displayGUIAnvil(int p_82244_1_, int p_82244_2_, int p_82244_3_);
	public void displayGUIWorkbench(int p_71058_1_, int p_71058_2_, int p_71058_3_);
	public void func_146101_a(Object tileEntityFurnace);
	public void func_146102_a(Object tileEntityDispenser);
	public void func_146100_a(Object tileEntity);
	public void func_146095_a(Object commandBlockLogic);
	public void func_146098_a(Object tileEntityBrewingStand);
	public void func_146104_a(Object tileEntityBeacon);
	public void displayGUIMerchant(Object iMerchant, String p_71030_2_);
	public Object sleepInBedAt(int p_71018_1_, int p_71018_2_, int p_71018_3_);
	public boolean getHideCape(int p_82241_1_);
	public void setHideCape(int p_82239_1_, boolean p_82239_2_);
	public void setSpawnChunk(Object chunkCoordinates, boolean p_71063_2_);
	public String func_146067_o(int p_146067_1_);
	public boolean isCurrentToolAdventureModeExempt(int p_82246_1_, int p_82246_2_, int p_82246_3_);
	public boolean canPlayerEdit(int p_82247_1_, int p_82247_2_, int p_82247_3_, int p_82247_4_, Object itemStack);
	public boolean getHideCape();
	public int getRevengeTimer();
	public Object getCombatTracker();

	public void setItemStackToSlot(int slotIn, Object itemStack);
	public boolean isSpectator();
	public Object getPlayerInfo();
	public Object getLocationSkin();
	public Object getLocationCape();
	public String getSkinType();
	public float getFovModifier();
	public Object getItemInUse();
	public boolean isUsingItem();
	public int getItemInUseDuration();
	public void stopUsingItem();
	public void clearItemInUse();
	public void closeScreen();
	public int getScore();
	public void setScore(int p_85040_1_);
	public void addScore(int p_85039_1_);
	public Object dropItem(boolean p_71040_1_);
	public Object dropItem(Object itemStack, boolean unused);
	public Object dropItemAndGetStack(Object entityItem);
	public float getDigSpeed(Object block);
	public float getDigSpeed(Object iBlockState, Object blockPos);
	public boolean canHarvestBlock(Object block);
	public void openEditSign(Object tileEntitySign);
	public void displayGuiEditCommandCart(Object commandBlockLogic);
	public void displayVillagerTradeGui(Object iMerchant);
	public void displayGUIChest(Object iInventory);
	public void openGuiHorseInventory(Object entityHorse, Object iInventory);
	public void displayGui(Object iInteractionObject);
	public void openBook(Object itemStack);
	public void destroyCurrentEquippedItem();
	public void attackTargetEntityWithCurrentItem(Object entity);
	public void onCriticalHit(Object entity);
	public void onEnchantmentCritical(Object entity);
	public void respawnPlayer();
	public boolean isUser();
	public Object getGameProfile();
	public Object trySleep(Object blockPos);
	public void wakeUpPlayer(boolean p_70999_1_, boolean updateWorldFlag, boolean setSpawn);
	public float getBedOrientationInDegrees();
	public boolean isPlayerFullyAsleep();
	public int getSleepTimer();
	public void addChatComponentMessage(Object iChatComponent, boolean p_146105_2_);
	public Object getBedLocation();
	public boolean isSpawnForced();
	public void setSpawnPoint(Object blockPos, boolean forced);
	public void addStat(Object statBase);
	public void addStat(Object statBase, int amount);
	public void takeStat(Object statBase);
	public void addMovementStat(double p_71000_1_, double p_71000_3_, double p_71000_5_);
	public Object getItemStackFromSlot(int slotIn);
	public void addExperience(int amount);
	public int getXPSeed();
	public void removeExperienceLevel(int levels);
	public void addExperienceLevel(int levels);
	public int xpBarCap();
	public void addExhaustion(float p_71020_1_);
	public Object getFoodStats();
	public boolean canEat(boolean ignoreHunger);
	public boolean shouldHeal();
	public void setItemInUse(Object itemStack, int duration);
	public boolean isAllowEdit();
	public boolean canPlayerEdit(Object blockPos, Object enumFacing, Object itemStack);
	public void clonePlayer(Object entityPlayer, boolean respawnFromEnd);
	public void sendPlayerAbilities();
	public void setGameType(Object gameType);
	public Object getInventoryEnderChest();
	public Object getHeldItem();
	public Object getWorldScoreboard();
	public boolean canOpen(Object lockCode);
	public boolean isWearing(Object enumPlayerModelParts);
	public boolean hasReducedDebug();
	public void setReducedDebug(boolean reducedDebug);
	public void openGui(Object mod, int modGuiId, Object world, int x, int y, int z);
	public Object getBedLocation(int dimension);
	public boolean isSpawnForced(int dimension);
	public void setSpawnChunk(Object blockPos, boolean forced, int dimension);
	public float getDefaultEyeHeight();
	public String getDisplayNameString();
	public void refreshDisplayName();
	public void addRandomDrop();
	public Object getAttackingEntity();
	public void setCommandStats(Object entity);
	// 190~
	public void openBook(Object itemStack, Object enumHand);
	public Object interact(Object entity, Object itemStack, Object enumHand);
	public boolean isCreative();
	public boolean isPlayerInfoSet();
	public Object getLocationElytra();
	public Object createCooldownTracker();
	public void updateSize();
	public void displayGuiCommandBlock(Object tileEntityCommandBlock);
	public void spawnSweepParticles();
	public boolean hasAchievement(Object achievement);
	public Object getPrimaryHand();
	public void setPrimaryHand(Object enumHandSide);
	public float getCooldownPeriod();
	public float getCooledAttackStrength(float adjustTicks);
	public void resetCooldown();
	public Object getCooldownTracker();
	public float getLuck();
	public void addPrefix(Object iTextComponent);
	public void addSuffix(Object iTextComponent);
	public Collection getPrefixes();
	public Collection getSuffixes();
	public Object getCurrentArmor(int slotIn);
	public boolean canPickUpLoot();
	public Object getMoveHelper();
	public Object getJumpHelper();
	public Object getNavigator();
	public Object getEntitySenses();
	public Object getAttackTarget();
	public void setAttackTarget(Object entityLiving);
	public boolean canAttackClass(Class par1Class);
	public void eatGrassBonus();
	public boolean isWithinHomeDistanceCurrentPosition();
	public Object getLookHelper();
	public void playLivingSound();
	public void spawnExplosionParticle();
	public int getDropItemId();
	public void setMoveForward(float par1);
	public boolean canDespawn();
	public void despawnEntity();
	public int getVerticalFaceSpeed();
	public void faceEntity(Object entity, float par2, float par3);
	public boolean getCanSpawnHere();
	public float getRenderSizeModifier();
	public int getMaxSpawnedInChunk();
	public int getTalkInterval();
	public boolean canBeSteered();
	public void setCanPickUpLoot(boolean par1);
	public boolean isNoDespawnRequired();
	public boolean processInteract(Object entityPlayer);

}
