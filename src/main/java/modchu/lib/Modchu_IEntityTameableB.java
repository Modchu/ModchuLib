package modchu.lib;

import java.util.Random;
import java.util.UUID;

public interface Modchu_IEntityTameableB {
	public Object getMaster();
	public Object getFreeVariable(String s);
	public void setFreeVariable(String s, Object o);
	public boolean isAngry();
	public void setAngry(boolean flag);
	public int getTextureColor();
	public void setTextureColor(int i);
	public void superEntityInit();
	public void superWriteEntityToNBT(Object nBTTagCompound);
	public void superReadEntityFromNBT(Object nBTTagCompound);
	public void superPlayTameEffect(boolean par1);
	public void superHandleHealthUpdate(byte par1);
	public boolean superIsTamed();
	public void superSetTamed(boolean par1);
	public boolean superIsSitting();
	public void superSetSitting(boolean par1);
	public String superGetOwnerName();
	public void superSetOwner(String par1Str);
	public Object superGetAISit();
	public boolean superFunc_142018_a(Object entityLivingBase, Object entityLivingBase1);
	public Object superGetTeam();
	public boolean superIsOnSameTeam(Object entityLivingBase);
	public void superUpdateAITick();
	public void superOnLivingUpdate();
	public boolean superAttackEntityFrom(Object damageSource, float par2);
	public boolean superGetCanSpawnHere();
	public int superGetTalkInterval();
	public boolean superCanDespawn();
	public int superGetExperiencePoints(Object entityPlayer);
	public boolean superIsBreedingItem(Object itemStack);
	public boolean superInteract(Object entityPlayer);
	public boolean superIsInLove();
	public void superResetInLove();
	public boolean superCanMateWith(Object entityAnimal);
	public int superGetGrowingAge();
	public void superAddGrowth(int par1);
	public void superSetGrowingAge(int par1);
	public boolean superIsChild();
	public void superSetScaleForAge(boolean par1);
	public boolean superHasPath();
	public void superDetachHome();
	public boolean superHasHome();
	public void superFunc_142017_o(float par1);
	public void superApplyEntityAttributes();
	public Object superGetLookHelper();
	public Object superGetMoveHelper();
	public Object superGetJumpHelper();
	public Object superGetNavigator();
	public Object superGetEntitySenses();
	public Object superGetAttackTarget();
	public void superSetAttackTarget(Object entityLivingBase);
	public boolean superCanAttackClass(Object c);
	public void superEatGrassBonus();
	public void superPlayLivingSound();
	public void superOnEntityUpdate();
	public void superSpawnExplosionParticle();
	public void superOnUpdate();
	public float superFunc_110146_f(float par1, float par2);
	public String superGetLivingSound();
	public void superDropFewItems(boolean par1, int par2);
	public void superSetMoveForward(float par1);
	public void superSetAIMoveSpeed(float par1);
	public void superDespawnEntity();
	public void superUpdateAITasks();
	public int superGetVerticalFaceSpeed();
	public void superFaceEntity(Object entity, float par2, float par3);
	public float superGetRenderSizeModifier();
	public int superGetMaxSpawnedInChunk();
	public Object superGetHeldItem();
	public void superSetCurrentItemOrArmor(int par1, Object itemStack);
	public void superDropEquipment(boolean par1, int par2);
	public void superAddRandomArmor();
	public boolean superCanBeSteered();
	public void superSetCustomNameTag(String par1Str);
	public String superGetCustomNameTag();
	public boolean superHasCustomName();
	public void superSetAlwaysRenderNameTag(boolean par1);
	public boolean superGetAlwaysRenderNameTag();
	public boolean superGetAlwaysRenderNameTagForRender();
	public void superSetEquipmentDropChance(int par1, float par2);
	public boolean superCanPickUpLoot();
	public void superSetCanPickUpLoot(boolean par1);
	public boolean superIsNoDespawnRequired();
	public void superClearLeashed(boolean par1, boolean par2);
	public boolean superAllowLeashing();
	public boolean superGetLeashed();
	public Object superGetLeashedToEntity();
	public void superSetLeashedToEntity(Object entity, boolean par2);
	public boolean superCanBreatheUnderwater();
	public void superOnDeathUpdate();
	public int superDecreaseAirSupply(int par1);
	public boolean superIsPlayer();
	public Random superGetRNG();
	public Object superGetAITarget();
	public void superSetRevengeTarget(Object entityLivingBase);
	public Object superGetLastAttacker();
	public int superGetLastAttackerTime();
	public void superSetLastAttacker(Object entity);
	public int superGetAge();
	public void superUpdatePotionEffects();
	public void superClearActivePotions();
	public Object superGetActivePotionEffects();
	public boolean superIsPotionActive(int par1);
	public boolean superIsPotionActive(Object potion);
	public Object superGetActivePotionEffect(Object potion);
	public void superAddPotionEffect(Object potionEffect);
	public boolean superIsPotionApplicable(Object potionEffect);
	public boolean superIsEntityUndead();
	public void superRemovePotionEffectClient(int par1);
	public void superRemovePotionEffect(int par1);
	public void superOnNewPotionEffect(Object potionEffect);
	public void superOnChangedPotionEffect(Object potionEffect, boolean par2);
	public void superOnFinishedPotionEffect(Object potionEffect);
	public void superHeal(float par1);
	public void superSetHealth(float par1);
	public void superRenderBrokenItemStack(Object itemStack);
	public void superOnDeath(Object damageSource);
	public void superKnockBack(Object entity, float par2, double par3, double par5);
	public String superGetHurtSound();
	public String superGetDeathSound();
	public boolean superIsOnLadder();
	public boolean superIsEntityAlive();
	public void superPerformHurtAnimation();
	public int superGetTotalArmorValue();
	public void superDamageArmor(float par1);
	public float superApplyArmorCalculations(Object damageSource, float par2);
	public float superApplyPotionDamageCalculations(Object damageSource, float par2);
	public void superDamageEntity(Object damageSource, float par2);
	public Object superFunc_94060_bK();
	public void superSwingItem();
	public void superKill();
	public void superUpdateArmSwingProgress();
	public Object superGetAttributeMap();
	public Object superGetCreatureAttribute();
	public void superSetSprinting(boolean par1);
	public float superGetSoundVolume();
	public float superGetSoundPitch();
	public boolean superIsMovementBlocked();
	public void superSetPositionAndUpdate(double par1, double par3, double par5);
	public void superDismountEntity(Object entity);
	public void superJump();
	public void superMoveEntityWithHeading(float par1, float par2);
	public float superGetAIMoveSpeed();
	public boolean superAttackEntityAsMob(Object entity);
	public boolean superIsPlayerSleeping();
	public void superCollideWithNearbyEntities();
	public void superCollideWithEntity(Object entity);
	public void superUpdateRidden();
	public void superSetJumping(boolean par1);
	public void superOnItemPickup(Object entity, int par2);
	public boolean superCanEntityBeSeen(Object entity);
	public Object superGetLookVec();
	public Object superGetLook(float par1);
	public float superGetSwingProgress(float par1);
	public boolean superCanBeCollidedWith();
	public boolean superCanBePushed();
	public float superGetEyeHeight();
	public void superSetBeenAttacked();
	public float superGetRotationYawHead();
	public void superSetRotationYawHead(float par1);
	public float superGetAbsorptionAmount();
	public void superSetAbsorptionAmount(float par1);
	public boolean superIsOnTeam(Object team);
	public Object superGetDataWatcher();
	public boolean superEquals(Object par1Obj);
	public int superHashCode();
	public void superPreparePlayerToSpawn();
	public void superSetDead();
	public void superSetRotation(float par1, float par2);
	public void superSetPosition(double par1, double par3, double par5);
	public void superSetAngles(float par1, float par2);
	public int superGetMaxInPortalTime();
	public void superSetOnFireFromLava();
	public void superSetFire(int par1);
	public void superExtinguish();
	public boolean superIsOffsetPositionInLiquid(double par1, double par3, double par5);
	public void superMoveEntity(double par1, double par3, double par5);
	public void superPlaySound(String par1Str, float par2, float par3);
	public boolean superCanTriggerWalking();
	public Object superGetBoundingBox();
	public void superDealFireDamage(int par1);
	public boolean superIsWet();
	public boolean superIsInWater();
	public boolean superHandleWaterMovement();
	public boolean superIsInsideOfMaterial(Object material);
	public boolean superHandleLavaMovement();
	public void superMoveFlying(float par1, float par2, float par3);
	public int superGetBrightnessForRender(float par1);
	public float superGetBrightness(float par1);
	public void superSetWorld(Object world);
	public void superSetPositionAndRotation(double par1, double par3, double par5, float par7, float par8);
	public void superSetLocationAndAngles(double par1, double par3, double par5, float par7, float par8);
	public float superGetDistanceToEntity(Object entity);
	public double superGetDistanceSq(double par1, double par3, double par5);
	public double superGetDistance(double par1, double par3, double par5);
	public double superGetDistanceSqToEntity(Object entity);
	public void superOnCollideWithPlayer(Object entityPlayer);
	public void superApplyEntityCollision(Object entity);
	public void superAddVelocity(double par1, double par3, double par5);
	public void superAddToPlayerScore(Object entity, int par2);
	public boolean superIsInRangeToRenderDist(double par1);
	public boolean superWriteMountToNBT(Object nBTTagCompound);
	public boolean superWriteToNBTOptional(Object nBTTagCompound);
	public void superWriteToNBT(Object nBTTagCompound);
	public void superReadFromNBT(Object nBTTagCompound);
	public boolean superShouldSetPosAfterLoading();
	public void superOnChunkLoad();
	public Object superNewDoubleNBTList(double... par1ArrayOfDouble);
	public Object superNewFloatNBTList(float... par1ArrayOfFloat);
	public Object superEntityDropItem(Object itemStack, float par2);
	public boolean superIsEntityInsideOpaqueBlock();
	public Object superGetCollisionBox(Object entity);
	public void superUpdateRiderPosition();
	public double superGetYOffset();
	public double superGetMountedYOffset();
	public void superMountEntity(Object entity);
	public float superGetCollisionBorderSize();
	public void superSetInPortal();
	public int superGetPortalCooldown();
	public void superSetVelocity(double par1, double par3, double par5);
	public boolean superIsBurning();
	public boolean superIsRiding();
	public boolean superIsSneaking();
	public void superSetSneaking(boolean par1);
	public boolean superIsSprinting();
	public boolean superIsInvisible();
	public boolean superIsInvisibleToPlayer(Object entityPlayer);
	public void superSetInvisible(boolean par1);
	public boolean superIsEating();
	public void superSetEating(boolean par1);
	public boolean superGetFlag(int par1);
	public void superSetFlag(int par1, boolean par2);
	public int superGetAir();
	public void superSetAir(int par1);
	public void superOnStruckByLightning(Object entityLightningBolt);
	public void superOnKillEntity(Object entityLivingBase);
	public void superSetInWeb();
	public Object[] superGetParts();
	public boolean superIsEntityEqual(Object entity);
	public boolean superCanAttackWithItem();
	public boolean superHitByEntity(Object entity);
	public String superToString();
	public boolean superIsEntityInvulnerable(Object damageSource);
	public void superCopyLocationAndAnglesFrom(Object entity);
	public void superCopyDataFrom(Object entity);
	public void superTravelToDimension(int par1);
	public int superGetTeleportDirection();
	public boolean superDoesEntityNotTriggerPressurePlate();
	public void superAddEntityCrashInfo(Object crashReportCategory);
	public boolean superCanRenderOnFire();
	public UUID superGetUniqueID();
	public boolean superIsPushedByWater();
	public Object superOnSpawnWithEgg(Object difficultyInstance, Object iEntityLivingData);
	public Object superFunc_130012_q();
	public void superFunc_110196_bT();
	public boolean superFunc_110173_bK();
	public boolean superFunc_110176_b(int par1, int par2, int par3);
	public void superFunc_110159_bB();
	public int superGetDropItemId();
	public Object superGetCurrentItemOrArmor(int par1);
	public String superGetEntityName();
	public void superDoBlockCollisions();
	public void superPlayStepSound(int par1, int par2, int par3, int par4);
	public boolean superIsInRangeToRenderVec3D(Object vec3);
	public Object superDropItem(int par1, int par2);
	public Object superDropItemWithOffset(int par1, int par2, float par3);
	public float superGetBlockExplosionResistance(Object explosion, Object world, int par3, int par4, int par5, Object block);
	public boolean superShouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);
	public String superGetTranslatedEntityName();

}
