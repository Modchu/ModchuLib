package modchu.lib;

import java.util.Random;
import java.util.UUID;

public interface Modchu_IEntityLivingBase extends Modchu_IEntity {
	public void setMovementSpeed(double d);
	public void setMaxHealth(double d);
	public void setFollowRange(double d);
	public void setKnockbackResistance(double d);
	public void setAttackDamage(double d);

	public int superFunc_96121_ay();
	public Random superGetRNG();
	public Object superGetAITarget();
	public Object superGetLastAttackingEntity();
	public void superSetLastAttackingEntity(Object entity);
	public int superGetAge();
	public float superGetAIMoveSpeed();
	public void superSetAIMoveSpeed(float par1);
	public boolean superAttackEntityAsMob(Object entity);
	public boolean superIsWithinHomeDistance(int par1, int par2, int par3);
	public void superSetHomeArea(int par1, int par2, int par3, int par4);
	public Object superGetHomePosition();
	public float superGetMaximumHomeDistance();
	public void superDetachHome();
	public boolean superHasHome();
	public void superSetRevengeTarget(Object entityLiving);
	public boolean superCanEntityBeSeen(Object entity);
	public void superOnDeathUpdate();
	public int superDecreaseAirSupply(int par1);
	public int superGetExperiencePoints(Object entityPlayer);
	public boolean superIsPlayer();
	public void superHeal(int par1);
	public Object superGetHealth();
	public float superGetSoundPitch();
	public int superGetTotalArmorValue();
	public void superDamageArmor(int par1);
	public Object superApplyArmorCalculations(Object damageSource, int par2);
	public Object superApplyPotionDamageCalculations(Object damageSource, int par2);
	public void superDamageEntity(Object damageSource, int par2);
	public float superGetSoundVolume();
	public Object superGetAmbientSound();
	public Object superGetHurtSound();
	public Object superGetDeathSound();
	public void superKnockBack(Object entity, int par2, double par3, double par5);
	public void superOnDeath(Object damageSource);
	public void superDropRareDrop(int par1);
	public void superDropFewItems(boolean par1, int par2);
	public void superMoveEntityWithHeading(float par1, float par2);
	public boolean superIsOnLadder();
	public boolean superCanBreatheUnderwater();
	public void superSetJumping(boolean par1);
	public void superOnLivingUpdate();
	public void superCollideWithNearbyEntities();
	public void superCollideWithEntity(Object entity);
	public boolean superIsAIEnabled();
	public boolean superIsClientWorld();
	public boolean superIsMovementBlocked();
	public boolean superIsBlocking();
	public void superJump();
	public void superUpdateAITasks();
	public void superUpdateAITick();
	public void superUpdateEntityActionState();
	public void superUpdateArmSwingProgress();
	public float superGetSwingProgress(float par1);
	public Object superGetPosition(float par1);
	public boolean superIsPlayerSleeping();
	public Object superGetItemIcon(Object itemStack, int par2);
	public void superUpdatePotionEffects();
	public void superClearActivePotions();
	public Object superGetActivePotionEffects();
	public boolean superIsPotionActive(int par1);
	public boolean superIsPotionActive(Object potion);
	public Object superGetActivePotionEffect(Object potion);
	public void superAddPotionEffect(Object potionEffect);
	public boolean superIsPotionApplicable(Object potionEffect);
	public boolean superIsEntityUndead();
	public void superRemovePotionEffectClient(int par1);
	public void superRemovePotionEffect(int par1);
	public void superOnNewPotionEffect(Object potionEffect);
	public void superOnChangedPotionEffect(Object potionEffect);
	public void superOnFinishedPotionEffect(Object potionEffect);
	public float superGetSpeedModifier();
	public boolean superIsChild();
	public Object superGetCreatureAttribute();
	public void superRenderBrokenItemStack(Object itemStack);
	public Object superGetHeldItemMainhand();
	public Object superGetItemStackFromSlot(int par1);
	public void superDropEquipment(boolean par1, int par2);
	public void superOnItemPickup(Object entity, int par2);
	public void superFunc_82162_bC();
	public void superInitCreature();
	public void superSwingArm();
	public Object superGetAttackingEntity();
	public void superFunc_94058_c(String par1Str);
	public String superFunc_94057_bL();
	public boolean superFunc_94056_bM();
	public void superSetNoAI(boolean par1);
	public boolean superFunc_94062_bN();
	public void superFunc_96120_a(int par1, float par2);
	public void superCurePotionEffects(Object itemStack);
	public boolean superShouldRiderFaceForward(Object entityPlayer);
	public void superPlayStepSound(int par1, int par2, int par3, Object par4);
	public void superSetPortal();
	public Object superGetCurrentItemOrArmor(int par1);
	public Object superGetCurrentArmor(int par1);
	public boolean superInteract(Object entityPlayer);
	// 162~
	public void superApplyEntityAttributes();
	public Object superGetLastAttacker();
	public int superGetLastAttackerTime();
	public void superSetLastAttacker(Object entity);
	public void superOnChangedPotionEffect(Object potionEffect, boolean par2);
	public void superHeal(Object par1);
	public void superSetHealth(Object par1);
	public void superKnockBack(Object entity, float par2, double par3, double par5);
	public void superDamageArmor(float par1);
	public Object superApplyArmorCalculations(Object damageSource, float par2);
	public Object superApplyPotionDamageCalculations(Object damageSource, float par2);
	public void superDamageEntity(Object damageSource, Object par2);
	public Object superGetAttributeMap();
	public void superDismountEntity(Object entity);
	public float superUpdateDistance(float par1, float par2);
	public float superGetAbsorptionAmount();
	public void superSetAbsorptionAmount(float par1);
	public boolean superIsOnTeam(Object team);
	public int superGetRevengeTimer();
	public Object superGetCombatTracker();
	public Object superGetEntityAttribute(Object iAttribute);
	// 180~
	public void superFunc_180433_a(double p_180433_1_, boolean p_180433_3_, Object block, Object blockPos);
	public boolean superCanDropLoot();
	public void superUpdatePotionMetadata();
	public void superResetPotionEffectMetadata();
	public Object superGetFallSound(int damageValue);
	public float superGetJumpUpwardsMotion();
	public void superHandleJumpLava();
	public boolean superIsServerWorld();
	public void superSendEnterCombat();
	public void superSendEndCombat();
	public void superMarkPotionsDirty();
	public void superFunc_145781_i(int p_145781_1_);
	public boolean superCanUseCommand(int permLevel, String commandName);
	public Object superFunc_174819_aU();
	public void superFunc_174834_g(Object nBTTagCompound);
	public boolean superFunc_174825_a(Object entityPlayer, Object vec3);
	// 188~
	public int superGetItemInUseCount();
	public void superUpdateItemUse(Object itemStack, int p_184584_2_);
	public void superOnItemUseFinish();
	public void superDropLoot();
	// 190~
	public void superSwingArm(Object enumHand);
	public Object superGetItemStackFromSlot(Object entityEquipmentSlot);
	public void superFrostWalk(Object blockPos);
	public void superPlayEquipSound(Object itemStack);
	public Object superRemoveActivePotionEffect(Object potion);
	public void superRemovePotionEffect(Object potion);
	public void superPlayHurtSound(Object damageSource);
	public void superDamageShield(float p_184590_1_);
	public Object superGetHeldItemOffhand();
	public Object superGetHeldItem(Object enumHand);
	public void superSetHeldItem(Object enumHand, Object itemStack);
	public boolean superIsHandActive();
	public Object superGetActiveHand();
	public void superUpdateActiveHand();
	public void superSetActiveHand(Object enumHand);
	public Object superGetActiveItemStack();
	public int superGetItemInUseMaxCount();
	public void superStopActiveHand();
	public void superResetActiveHand();
	public boolean superIsActiveItemStackBlocking();
	public boolean superIsElytraFlying();
	public int superGetTicksElytraFlying();
	public boolean superTeleportTo_(double x, double y, double z);
	public boolean superCanBeHitWithPotion();
	public void superAddRandomDrop();
	public void superDropLoot(boolean p_184610_1_, int p_184610_2_, Object damageSource);
	public boolean superGetAlwaysRenderNameTag();

}
