package modchu.lib;

import java.util.Random;
import java.util.UUID;

public interface Modchu_IEntityPlayerSP {
	public void init();
	public void setPositionCorrection(double par1, double par3, double par5);
	public Object getRidingEntity2();
	public Object superGetRidingEntity2();
	public boolean superIsRiding2();
	public boolean isRiding2();
	public void superDismountRidingEntity2();
	public void dismountRidingEntity2();

	public Object supergetCreatureAttribute();
	public void supersetSize(float f, float f1);
	public boolean superpushOutOfBlocks(double d, double d1, double d2);
	public Object supercopyPlayer(Object entityplayer);
	public void publicResetHeight();
	public void publicSetSize(float f, float f1);
	public void superupdateRidden();
	public boolean superattackEntityFrom(Object damageSource, int par2);
	public void superonDeath(Object damageSource);
	public void supersendMotionUpdates();
	public void superwakeUpPlayer(boolean flag, boolean flag1, boolean flag2);
	public void superpreparePlayerToSpawn();
	public void supersetPositionCorrection(double par1, double par3, double par5);
	public void superonLivingUpdate();
	public void supermoveEntityWithHeading(float f, float f1);
	public Object supergetHurtSound();
	public double supergetMountedYOffset();
	public void superresetHeight();
	public double supergetYOffset();
	public boolean superisEntityInsideOpaqueBlock();
	public Object supercopyInventory(Object inventoryplayer);
	public boolean superattackEntityFrom(Object var1, Object damageSource, int i);
	public float supergetMaxHealth();
	public int supergetMaxHealthInt();
	public float supergetHealth();
	public int supergetHealthInt();
	public void supersetHealth(float f);
	public void supersetHealthInt(int i);
	public boolean superAttackEntityFrom(Object damageSource, float par2);
	public void superHeal(float par1);
	public void superOnUpdate();
	public Object superDropItem(boolean par1);
	public Object superDropItemAndGetStack(Object entityItem);
	public void superSendChatMessage(String par1Str);
	public void superSwingArm();
	public void superRespawnPlayer();
	public void superDamageEntity(Object damageSource, float par2);
	public void superCloseScreen();
	public void superFunc_92015_f();
	public void superSetPlayerSPHealth(float par1);
	public void superAddStat(Object statBase, int par2);
	public void superIncrementStat(Object statBase, int par2);
	public void superSendPlayerAbilities();
	public void superSendHorseJump();
	public void superFunc_110322_i();
	public void superFunc_142020_c(String par1Str);
	public String superGetClientBrand();
	public void superUpdateEntityActionState();
	public float superGetFOVMultiplier();
	public void superDisplayGUIEditSign(Object tileEntity);
	public void superOpenBook(Object itemStack);
	public void superDisplayGUIChest(Object iInventory);
	public void superDisplayGUIHopper(Object tileEntityHopper);
	public void superDisplayGUIHopperMinecart(Object entityMinecartHopper);
	public void superOpenGuiHorseInventory(Object entityHorse, Object iInventory);
	public void superDisplayGUIWorkbench(int par1, int par2, int par3);
	public void superDisplayGUIEnchantment(int par1, int par2, int par3, String par4Str);
	public void superDisplayGUIAnvil(int par1, int par2, int par3);
	public void superDisplayGUIFurnace(Object tileEntityFurnace);
	public void superDisplayGUIBrewingStand(Object tileEntityBrewingStand);
	public void superDisplayGUIBeacon(Object tileEntityBeacon);
	public void superDisplayGUIDispenser(Object tileEntityDispenser);
	public void superDisplayGUIMerchant(Object iMerchant, String par2Str);
	public void superOnCriticalHit(Object entity);
	public void superOnEnchantmentCritical(Object entity);
	public void superOnItemPickup(Object entity, int par2);
	public boolean superIsSneaking();
	public void superSendMessage(String par1Str);
	public void superSetSprinting(boolean par1);
	public void superSetXPStats(float par1, int par2, int par3);
	public void superSendChatToPlayer(Object chatMessageComponent);
	public Object superGetPlayerCoordinates();
	public Object superGetHeldItem();
	public void superPlaySound(Object par1Str, float par2, float par3);
	public boolean superIsClientWorld();
	public boolean superIsRidingHorse();
	public float superGetHorseJumpPower();
	public void superSetupCustomSkin();
	public Object superGetTextureSkin();
	public Object superGetTextureCape();
	public Object superGetLocationSkin();
	public Object superGetLocationCape();
	public void superApplyEntityAttributes();
	public void superEntityInit();
	public Object superGetItemInUse();
	public int superGetItemInUseCount();
	public boolean superIsHandActive();
	public int superGetItemInUseDuration();
	public void superStopUsingItem();
	public void superClearItemInUse();
	public boolean superIsBlocking();
	public int superGetMaxInPortalTime();
	public int superGetPortalCooldown();
	public void superUpdateItemUse(Object itemStack, int par2);
	public void superOnItemUseFinish();
	public void superHandleStatusUpdate(byte par1);
	public boolean superIsMovementBlocked();
	public boolean superStartRiding(Object entity);
	public int superGetScore();
	public void superSetScore(int par1);
	public void superAddScore(int par1);
	public void superAddToPlayerScore(Object entity, int par2);
	public Object superDropPlayerItem(Object itemStack);
	public Object superDropItem(Object itemStack, boolean par2);
	public float superGetCurrentPlayerStrVsBlock(Object block, boolean par2);
	public float superGetCurrentPlayerStrVsBlock(Object block, boolean par2, int meta);
	public boolean superCanHarvestBlock(Object block);
	public void superReadEntityFromNBT(Object nBTTagCompound);
	public void superWriteEntityToNBT(Object nBTTagCompound);
	public float superGetEyeHeight();
	public boolean superCanAttackPlayer(Object entityPlayer);
	public void superDamageArmor(float par1);
	public int superGetTotalArmorValue();
	public float superGetArmorVisibility();
	public boolean superInteractWith(Object entity);
	public Object superGetHeldItemMainhand();
	public void superDestroyCurrentEquippedItem();
	public void superAttackTargetEntityWithCurrentItem(Object entity);
	public void superSetDead();
	public Object superSleepInBedAt(int par1, int par2, int par3);
	public float superGetBedOrientationInDegrees();
	public boolean superIsPlayerSleeping();
	public boolean superIsPlayerFullyAsleep();
	public int superGetSleepTimer();
	public boolean superGetHideCape(int par1);
	public void superSetHideCape(int par1, boolean par2);
	public Object superGetBedLocation();
	public boolean superIsSpawnForced();
	public Object superGetBedLocation(int dimension);
	public boolean superIsSpawnForced(int dimension);
	public void superSetSpawnChunk(Object chunkCoordinates, boolean par2);
	public void superSetSpawnChunk(Object chunkCoordinates, boolean forced, int dimension);
	public void superAddStat(Object statBase);
	public void superJump();
	public float superGetAIMoveSpeed();
	public void superAddMovementStat(double par1, double par3, double par5);
	public void superFall(float par1);
	public void superOnKillEntity(Object entityLivingBase);
	public void superSetInWeb();
	public Object superGetItemIcon(Object itemStack, int par2);
	public Object superGetItemStackFromSlot(Object par1);
	public Object superGetCurrentArmor(int slotIn);
	public void superAddExperience(int par1);
	public void superAddExperienceLevel(int par1);
	public int superXpBarCap();
	public void superAddExhaustion(float par1);
	public Object superGetFoodStats();
	public boolean superCanEat(boolean par1);
	public boolean superShouldHeal();
	public void superSetItemInUse(Object itemStack, int par2);
	public boolean superIsCurrentToolAdventureModeExempt(int par1, int par2, int par3);
	public boolean superCanPlayerEdit(int par1, int par2, int par3, int par4, Object itemStack);
	public int superGetExperiencePoints(Object entityPlayer);
	public boolean superIsPlayer();
	public String superGetEntityName();
	public boolean superGetAlwaysRenderNameTagForRender();
	public void superClonePlayer(Object entityPlayer, boolean par2);
	public boolean superCanTriggerWalking();
	public void superSetGameType(Object enumGameType);
	public String superGetName();
	public Object superGetEntityWorld();
	public Object superGetInventoryEnderChest();
	public Object superGetCurrentItemOrArmor(int par1);
	public void superSetItemStackToSlot(Object entityEquipmentSlot, Object itemStack);
	public boolean superIsInvisibleToPlayer(Object entityPlayer);
	public Object[] superGetLastActiveItems();
	public boolean superGetHideCape();
	public boolean superIsPushedByWater();
	public Object superGetWorldScoreboard();
	public Object superGetTeam();
	public String superGetTranslatedEntityName();
	public void superSetAbsorptionAmount(float par1);
	public float superGetAbsorptionAmount();
	public void superOpenGui(Object mod, int modGuiId, Object world, int x, int y, int z);
	public float superGetDefaultEyeHeight();
	public Object superGetDisplayName();
	public void superRefreshDisplayName();
	public void superUpdateFallState(double par1, boolean par3);
	public boolean superCanBreatheUnderwater();
	public void superOnEntityUpdate();
	public boolean superIsChild();
	public void superOnDeathUpdate();
	public int superDecreaseAirSupply(int par1);
	public Random superGetRNG();
	public Object superGetAITarget();
	public int superFunc_142015_aE();
	public void superSetRevengeTarget(Object entityLivingBase);
	public Object superGetLastAttacker();
	public int superGetLastAttackerTime();
	public void superSetLastAttacker(Object entity);
	public int superGetAge();
	public void superUpdatePotionEffects();
	public void superClearActivePotions();
	public Object superGetActivePotionEffects();
	public boolean superIsPotionActive(int par1);
	public boolean superIsPotionActive(Object potion);
	public Object superGetActivePotionEffect(Object potion);
	public void superAddPotionEffect(Object potionEffect);
	public boolean superIsPotionApplicable(Object potionEffect);
	public boolean superIsEntityUndead();
	public void superRemovePotionEffectClient(int par1);
	public void superRemovePotionEffect(int par1);
	public void superOnNewPotionEffect(Object potionEffect);
	public void superOnChangedPotionEffect(Object potionEffect, boolean par2);
	public void superOnFinishedPotionEffect(Object potionEffect);
	public void superRenderBrokenItemStack(Object itemStack);
	public void superDropEquipment(boolean par1, int par2);
	public void superKnockBack(Object entity, float par2, double par3, double par5);
	public Object superGetDeathSound();
	public void superDropRareDrop(int par1);
	public void superDropFewItems(boolean par1, int par2);
	public boolean superIsOnLadder();
	public boolean superIsEntityAlive();
	public void superPerformHurtAnimation();
	public Object superApplyArmorCalculations(Object damageSource, float par2);
	public Object superApplyPotionDamageCalculations(Object damageSource, float par2);
	public Object superFunc_110142_aN();
	public Object superGetAttackingEntity();
	public void superKill();
	public void superUpdateArmSwingProgress();
	public Object superGetEntityAttribute(Object attribute);
	public Object superGetAttributeMap();
	public float superGetSoundVolume();
	public float superGetSoundPitch();
	public void superSetPositionAndUpdate(double par1, double par3, double par5);
	public void superDismountEntity(Object entity);
	public boolean superIsAIEnabled();
	public void superSetAIMoveSpeed(float par1);
	public boolean superAttackEntityAsMob(Object entity);
	public float superUpdateDistance(float par1, float par2);
	public void superUpdateAITasks();
	public void superCollideWithNearbyEntities();
	public void superCollideWithEntity(Object entity);
	public void superSetPositionAndRotationDirect(double par1, double par3, double par5, float par7, float par8, int par9);
	public void superHandleJumpWater();
	public void superSetJumping(boolean par1);
	public boolean superCanEntityBeSeen(Object entity);
	public Object superGetLookVec();
	public Object superGetLook(float par1);
	public float superGetSwingProgress(float par1);
	public Object superGetPosition(float par1);
	public Object superRayTrace(double par1, float par3);
	public boolean superCanBeCollidedWith();
	public boolean superCanBePushed();
	public void superSetBeenAttacked();
	public float superGetRotationYawHead();
	public void superSetRotationYawHead(float par1);
	public boolean superIsOnSameTeam(Object entityLivingBase);
	public boolean superIsOnTeam(Object team);
	public void superCurePotionEffects(Object itemStack);
	public boolean superShouldRiderFaceForward(Object entityPlayer);
	public Object superGetDataManager();
	//public boolean superEquals(Object par1Obj);
	//public int superHashCode();
	public void superSetRotation(float par1, float par2);
	public void superSetPosition(double par1, double par3, double par5);
	public void superTurn(float par1, float par2);
	public void superSetOnFireFromLava();
	public void superSetFire(int par1);
	public void superExtinguish();
	public boolean superIsOffsetPositionInLiquid(double par1, double par3, double par5);
	public void superMove(Object moverType, double par1, double par3, double par5);
	public void superDoBlockCollisions();
	public void superPlayStepSound(int par1, int par2, int par3, int par4);
	public Object superGetCollisionBoundingBox();
	public void superDealFireDamage(int par1);
	public boolean superIsWet();
	public boolean superIsInWater();
	public boolean superHandleWaterMovement();
	public boolean superIsInsideOfMaterial(Object material);
	public boolean superHandleLavaMovement();
	public void superMoveRelative(float par1, float par2, float par3);
	public int superGetBrightnessForRender(float par1);
	public float superGetBrightness(float par1);
	public void superSetWorld(Object world);
	public void superSetPositionAndRotation(double par1, double par3, double par5, float par7, float par8);
	public void superSetLocationAndAngles(double par1, double par3, double par5, float par7, float par8);
	public float superGetDistanceToEntity(Object entity);
	public double superGetDistanceSq(double par1, double par3, double par5);
	public double superGetDistance(double par1, double par3, double par5);
	public double superGetDistanceSqToEntity(Object entity);
	public void superOnCollideWithPlayer(Object entityPlayer);
	public void superApplyEntityCollision(Object entity);
	public void superAddVelocity(double par1, double par3, double par5);
	public boolean superIsInRangeToRenderVec3D(Object vec3);
	public boolean superIsInRangeToRenderDist(double par1);
	public boolean superWriteToNBTAtomically(Object nBTTagCompound);
	public boolean superWriteToNBTOptional(Object nBTTagCompound);
	public Object superWriteToNBT(Object nBTTagCompound);
	public void superReadFromNBT(Object nBTTagCompound);
	public boolean superShouldSetPosAfterLoading();
	public void superOnChunkLoad();
	public Object superNewDoubleNBTList(double... par1ArrayOfDouble);
	public Object superNewFloatNBTList(float... par1ArrayOfFloat);
	public float superGetShadowSize();
	public Object superDropItem(int par1, int par2);
	public Object superDropItemWithOffset(int par1, int par2, float par3);
	public Object superEntityDropItem(Object itemStack, float par2);
	public boolean superProcessInitialInteract(Object entityPlayer);
	public Object superGetCollisionBox(Object entity);
	public float superGetCollisionBorderSize();
	public void superSetPortal(Object blockPos);
	public void superSetVelocity(double par1, double par3, double par5);
	public boolean superIsBurning();
	public boolean superIsRiding();
	public void superSetSneaking(boolean par1);
	public boolean superIsSprinting();
	public boolean superIsInvisible();
	public void superSetInvisible(boolean par1);
	public boolean superIsEating();
	public void superSetEating(boolean par1);
	public boolean superGetFlag(int par1);
	public void superSetFlag(int par1, boolean par2);
	public int superGetAir();
	public void superSetAir(int par1);
	public void superOnStruckByLightning(Object entityLightningBolt);
	public Object[] superGetParts();
	public boolean superIsEntityEqual(Object entity);
	public boolean superCanBeAttackedWithItem();
	public boolean superHitByEntity(Object entity);
	public String superToString();
	public boolean superIsEntityInvulnerable();
	public void superCopyLocationAndAnglesFrom(Object entity);
	public void superCopyDataFrom(Object entity, boolean par2);
	public Object superChangeDimension(int par1);
	public float superGetBlockExplosionResistance(Object explosion, Object world, int par3, int par4, int par5, Object block);
	public boolean superShouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);
	public int superGetMaxSafePointTries();
	public Object superGetLastPortalVec();
	public boolean superDoesEntityNotTriggerPressurePlate();
	public void superAddEntityCrashInfo(Object crashReportCategory);
	public boolean superCanRenderOnFire();
	public UUID superGetUniqueID();
	public Object superGetEntityData();
	public boolean superShouldRiderSit();
	public Object superGetPickedResult(Object movingObjectPosition);
	public UUID superGetPersistentID();
	public boolean superShouldRenderInPass(int pass);
	public boolean superIsCreatureType(Object enumCreatureType, boolean forSpawnCount);
	public String superRegisterExtendedProperties(String identifier, Object iExtendedEntityProperties);
	public Object superGetExtendedProperties(String identifier);
	public boolean superCanRiderInteract();
	public boolean superShouldDismountInWater(Object entity);
	public void superSetCurrentItemOrArmor(int slotIn, Object itemStack);
	// ~152
	public void superHeal(int par1);
	public void superDamageEntity(Object damageSource, int par2);
	public boolean superFunc_71066_bF();
	public void superUpdateCloak();
	public void superSendChatToPlayer(String par1Str);
	public int superGetMaxHealth();
	public void superAlertWolves(Object entityLiving, boolean par2);
	public void superDamageArmor(int par1);
	public void superFunc_82162_bC();
	public boolean superCanCurrentToolHarvestBlock(int par1, int par2, int par3);
	public boolean superFunc_94062_bN();
	public boolean superCanPickUpLoot();
	public Object superGetTranslator();
	public String superTranslateString(String par1Str, Object... par2ArrayOfObj);
	public int superFunc_96121_ay();
	public Object superGetLookHelper();
	public Object superGetMoveHelper();
	public Object superGetJumpHelper();
	public Object superGetNavigator();
	public Object superGetEntitySenses();
	public Object superGetLastAttackingEntity();
	public void superSetLastAttackingEntity(Object entity);
	public Object superGetAttackTarget();
	public void superSetAttackTarget(Object entityLiving);
	public boolean superCanAttackClass(Class par1Class);
	public void superEatGrassBonus();
	public boolean superIsWithinHomeDistanceCurrentPosition();
	public boolean superIsWithinHomeDistance(int par1, int par2, int par3);
	public void superSetHomeArea(int par1, int par2, int par3, int par4);
	public Object superGetHomePosition();
	public float superGetMaximumHomeDistance();
	public void superDetachHome();
	public boolean superHasHome();
	public String superGetTexture();
	public int superGetTalkInterval();
	public void superPlayLivingSound();
	public void superSpawnExplosionParticle();
	public int superGetHealth();
	public void superSetEntityHealth(int par1);
	public Object superApplyArmorCalculations(Object damageSource, int par2);
	public Object superApplyPotionDamageCalculations(Object damageSource, int par2);
	public String superGetLivingSound();
	public void superKnockBack(Object entity, int par2, double par3, double par5);
	public int superGetDropItemId();
	public void superSetMoveForward(float par1);
	public boolean superCanDespawn();
	public void superDespawnEntity();
	public int superGetVerticalFaceSpeed();
	public void superFaceEntity(Object entity, float par2, float par3);
	public boolean superGetCanSpawnHere();
	public float superGetRenderSizeModifier();
	public int superGetMaxSpawnedInChunk();
	public void superOnChangedPotionEffect(Object potionEffect);
	public float superGetSpeedModifier();
	public int superGetMaxFallHeight();
	public void superInitCreature();
	public boolean superCanBeSteered();
	public void superFunc_94058_c(String par1Str);
	public String superFunc_94057_bL();
	public boolean superFunc_94056_bM();
	public void superSetNoAI(boolean par1);
	public void superFunc_96120_a(int par1, float par2);
	public void superSetCanPickUpLoot(boolean par1);
	public boolean superIsNoDespawnRequired();
	public boolean superAddNotRiddenEntityID(Object nBTTagCompound);
	public boolean superAddEntityID(Object nBTTagCompound);
	public boolean superInteract(Object entityPlayer);
	public void superUnmountEntity(Object entity);
	public float superFunc_82146_a(Object explosion, Object world, int par3, int par4, int par5, Object block);
	public boolean superFunc_96091_a(Object explosion, Object world, int par3, int par4, int par5, int par6, float par7);
	// 172~
	public void superCloseScreenNoPacket();
	public Object superGetStatFileWriter();
	public void superFunc_146100_a(Object tileEntity);
	public void superFunc_146095_a(Object commandBlockLogic);
	public void superFunc_146093_a(Object tileEntityHopper);
	public void superFunc_146104_a(Object tileEntityBeacon);
	public void superFunc_146102_a(Object tileEntityDispenser);
	public void superFunc_146098_a(Object tileEntityBrewingStand);
	public void superFunc_146101_a(Object tileEntityFurnace);
	public void superSendMessage(Object iChatComponent);
	public void superSendStatusMessage(Object iChatComponent, boolean p_146105_2_);
	public Object superGetSplashSound();
	public Object superGetSwimSound();
	public float superGetBreakSpeed(Object block, boolean p_146096_2_, int meta);
	public float superGetBreakSpeed(Object block, boolean p_146096_2_, int meta, int x, int y, int z);
	public Object superDropItem(Object itemStack, boolean p_146097_2_, boolean p_146097_3_);
	public Object superGetGameProfile();
	public String superFunc_146067_o(int p_146067_1_);
	public Object superGetItemStackFromSlot(int par1);
	public boolean superCanDropLoot();
	public int superGetEntityId();
	public void superSetEntityId(int p_145769_1_);
	public void superFunc_145780_a(int p_145780_1_, int p_145780_2_, int p_145780_3_, Object block);
	public boolean superIsInRangeToRender3d(double p_145770_1_, double p_145770_3_, double p_145770_5_);
	public Object superFropItemWithOffset(Object item, int p_145778_2_, float p_145778_3_);
	public Object superDropItem(Object item, int p_145779_2_);
	public float superFunc_145772_a(Object explosion, Object world, int p_145772_3_, int p_145772_4_, int p_145772_5_, Object block);
	public boolean superFunc_145774_a(Object explosion, Object world, int p_145774_3_, int p_145774_4_, int p_145774_5_, Object block, float p_145774_7_);
	public void superOnDataWatcherUpdate(int p_145781_1_);
	// 179~
	public boolean superHasPlayerInfo();
	public boolean superHasSkin();
	public void superFunc_152121_a(Object type, Object resourceLocation);
	public void superSendEnterCombat();
	public void superSendEndCombat();
	// 180~
	public void superOnUpdateWalkingPlayer();
	public void superCloseScreenAndDropStack();
	public boolean superIsUser();
	public void superSendHorseInventory();
	public void superSetClientBrand(String brand);
	public boolean superCanUseCommand(int permLevel, String commandName);
	public Object superGetPosition();
	public boolean superIsServerWorld();
	public void superOpenEditSign(Object tileEntitySign);
	public void superDisplayGuiEditCommandCart(Object commandBlockLogic);
	public void superDisplayGui(Object iInteractionObject);
	public void superDisplayVillagerTradeGui(Object iMerchant);
	public boolean superIsCurrentViewEntity();
	public boolean superIsSpectator();
	public Object superGetPlayerInfo();
	public String superGetSkinType();
	public float superGetFovModifier();
	public float superGetToolDigEfficiency(Object block);
	public float superGetDigSpeed(Object iBlockState, Object blockPos);
	public Object superTrySleep(Object blockPos);
	public void superSetSpawnPoint(Object blockPos, boolean forced);
	public void superTakeStat(Object statBase);
	public void superFall(float distance, float damageMultiplier);
	public Object superGetFallSound(int damageValue);
	public int superGetXPSeed();
	public void superRemoveExperienceLevel(int levels);
	public boolean superIsAllowEdit();
	public boolean superCanPlayerEdit(Object blockPos, Object enumFacing, Object itemStack);
	public Object[] superGetInventory();
	public boolean superCanOpen(Object lockCode);
	public boolean superIsWearing(Object enumPlayerModelParts);
	public boolean superSendCommandFeedback();
	public boolean superReplaceItemInInventory(int p_174820_1_, Object itemStack);
	public boolean superHasReducedDebug();
	public void superSetReducedDebug(boolean reducedDebug);
	public String superGetDisplayNameString();
	public void superOnKillCommand();
	public void superUpdateFallState(double p_180433_1_, boolean p_180433_3_, Object block, Object blockPos);
	public int superGetRevengeTimer();
	public void superUpdatePotionMetadata();
	public void superResetPotionEffectMetadata();
	public void superDropLoot();
	public Object superGetCombatTracker();
	public float superGetJumpUpwardsMotion();
	public void superHandleJumpLava();
	public void superSetPositionAndRotationDirect(double p_180426_1_, double p_180426_3_, double p_180426_5_, float p_180426_7_, float p_180426_8_, int p_180426_9_, boolean p_180426_10_);
	public void superMarkPotionsDirty();
	public void superPlayStepSound(Object blockPos, Object block);
	public boolean superIsSilent();
	public void superSetSilent(boolean isSilent);
	public void superSpawnRunningParticles();
	public void superCreateRunningParticles();
	public boolean superIsInLava();
	public void superMoveToBlockPosAndAngles(Object blockPos, float p_174828_2_, float p_174828_3_);
	public double superGetDistanceSq(Object blockPos);
	public double superGetDistanceSqToCenter(Object blockPos);
	public Object superGetPositionEyes(float p_174824_1_);
	public Object superDropItemWithOffset(Object item, int size, float p_145778_3_);
	public boolean superIsEntityInvulnerable(Object damageSource);
	public void superCopyDataFromOld(Object entity);
	public float superGetExplosionResistance(Object explosion, Object world, Object blockPos, Object iBlockState);
	public boolean superVerifyExplosion(Object explosion, Object world, Object blockPos, Object iBlockState, float p_174816_5_);
	public void superSetCustomNameTag(String p_96094_1_);
	public String superGetCustomNameTag();
	public boolean superHasCustomName();
	public void superSetAlwaysRenderNameTag(boolean p_174805_1_);
	public boolean superGetAlwaysRenderNameTag();
	public Object superGetHorizontalFacing();
	public Object superGetHoverEvent();
	public boolean superIsSpectatedByPlayer(Object entityPlayerMP);
	public Object superGetEntityBoundingBox();
	public void superSetEntityBoundingBox(Object axisAlignedBB);
	public boolean superIsOutsideBorder();
	public void superSetOutsideBorder(boolean p_174821_1_);
	public Object superGetPositionVector();
	public Object superGetCommandSenderEntity();
	public void superSetCommandStat(Object type, int amount);
	public Object superGetCommandStats();
	public void superSetCommandStats(Object entity);
	public Object superGetNBTTagCompound();
	public void superClientUpdateEntityNBT(Object nBTTagCompound);
	public boolean superInteractAt(Object entityPlayer, Object vec3);
	public boolean superIsImmuneToExplosions();
	public void superApplyEnchantments(Object entityLivingBase, Object entity);
	public void superSetInPortal();
	public void superUpdatePassenger();
	// 190~
	public void superSwingArm(Object enumHand);
	public void superOpenBook(Object itemStack, Object enumHand);
	public Object superInteract(Object entity, Object itemStack, Object enumHand);
	public void superUpdatePassenger(Object entity);
	public boolean superProcessInitialInteract(Object entityPlayer, Object itemStack, Object enumHand);
	public void superSetRenderYawOffset(float p_181013_1_);
	public void superDropLoot(boolean p_184610_1_, int p_184610_2_, Object damageSource);
	public void superFrostWalk(Object blockPos);
	public void superPlayEquipSound(Object itemStack);
	public Object superRemoveActivePotionEffect(Object potion);
	public void superRemovePotionEffect(Object potion);
	public void superPlayHurtSound(Object damageSource);
	public void superDamageShield(float p_184590_1_);
	public Object superGetHeldItemOffhand();
	public Object superGetHeldItem(Object enumHand);
	public void superSetHeldItem(Object enumHand, Object itemStack);
	public Object superGetActiveHand();
	public void superUpdateActiveHand();
	public void superSetActiveHand(Object enumHand);
	public Object superGetActiveItemStack();
	public int superGetItemInUseMaxCount();
	public void superStopActiveHand();
	public void superResetActiveHand();
	public boolean superIsActiveItemStackBlocking();
	public boolean superIsElytraFlying();
	public int superGetTicksElytraFlying();
	public boolean superAttemptTeleport(double x, double y, double z);
	public boolean superCanBeHitWithPotion();
	public Object superGetFreeVariable(String s);
	public void superSetFreeVariable(String s, Object o);
	public void superPlayStepSound(int par1, int par2, int par3, Object par4);
	public boolean superIsInRangeToRender3d(Object vec3);
	public boolean superShouldExplodeBlock(Object explosion, Object world, int par3, int par4, int par5, Object par6, float par7);
	public Object superGetTags();
	public boolean superAddTag(String tag);
	public boolean superRemoveTag(String tag);
	public void superSetDropItemsWhenDead(boolean p_184174_1_);
	public void superDecrementTimeUntilPortal();
	public void superResetPositionToBB();
	public void superApplyOrientationToEntity(Object entity);
	public boolean superStartRiding(Object entity, boolean force);
	public boolean superCanBeRidden(Object entity);
	public void superRemovePassengers();
	public void superDismountRidingEntity();
	public void superAddPassenger(Object entity);
	public void superRemovePassenger(Object entity);
	public boolean superCanFitPassenger(Object entity);
	public Object superGetHeldEquipment();
	public Object superGetArmorInventoryList();
	public Object superGetEquipmentAndArmor();
	public boolean superIsBeingRidden();
	public boolean superIsGlowing();
	public void superSetGlowing(boolean p_184195_1_);
	public boolean superIsOnScoreboardTeam(Object team);
	public void superSetEntityInvulnerable(boolean isInvulnerable);
	public boolean superIsNonBoss();
	public void superSetUniqueId(UUID uniqueIdIn);
	public void superNotifyDataManagerChange(Object dataParameter);
	public Object superGetAdjustedHorizontalFacing();
	public Object superGetRenderBoundingBox();
	public Object superGetServer();
	public Object superApplyPlayerInteraction(Object entityPlayer, Object vec3d, Object itemStack, Object enumHand);
	public boolean superHasCapability(Object capability, Object enumFacing);
	public void superDeserializeNBT(Object nBTTagCompound);
	public Object superSerializeNBT();
	public void superAddTrackingPlayer(Object entityPlayerMP);
	public void superRemoveTrackingPlayer(Object entityPlayerMP);
	public float superGetRotatedYaw(Object rotation);
	public float superGetMirroredYaw(Object mirror);
	public boolean superSetPositionNonDirty();
	public Object superGetControllingPassenger();
	public Object superGetPassengers();
	public boolean superIsPassenger(Object entity);
	public Object superGetRecursivePassengers();
	public Object superGetLowestRidingEntity();
	public boolean superIsRidingSameEntity(Object entity);
	public boolean superIsRidingOrBeingRiddenBy(Object entity);
	public boolean superCanPassengerSteer();
	public Object superGetRidingEntity();
	public Object superGetPushReaction();
	public Object superGetSoundCategory();
	public Object superGetCapability(Object capability, Object enumFacing);
	public Object superGetRecursivePassengersByType(Class entityClass);
	public void superSetServerBrand(String brand);
	public String superGetServerBrand();
	public int superGetPermissionLevel();
	public void superSetPermissionLevel(int p_184839_1_);
	public void superDisplayGuiCommandBlock(Object tileEntityCommandBlock);
	public boolean superIsRowingBoat();
	public boolean superIsCreative();
	public boolean superIsPlayerInfoSet();
	public Object superGetLocationElytra();
	public Object superCreateCooldownTracker();
	public void superUpdateSize();
	public void superSpawnSweepParticles();
	public boolean superHasAchievement(Object achievement);
	public Object superGetPrimaryHand();
	public void superSetPrimaryHand(Object enumHandSide);
	public float superGetCooldownPeriod();
	public float superGetCooledAttackStrength(float adjustTicks);
	public void superResetCooldown();
	public Object superGetCooldownTracker();
	public float superGetLuck();
	public void superAddPrefix(Object iTextComponent);
	public void superAddSuffix(Object iTextComponent);
	public Object superGetPrefixes();
	public Object superGetSuffixes();
	public boolean superIgnoreItemEntityData();
	public void superSetItemStackToSlot(int p_70062_1_, Object itemStack);
	public boolean superEquals(Object p_equals_1_);
	public int superHashCode();
	public Object getFreeVariable(String s);
	public void setFreeVariable(String s, Object o);
	public boolean superattackEntityFrom(Object damageSource, Object p_70097_2_);
	public boolean superIsEntityInsideOpaqueBlock();
	public void superUpdateRidden();
	public boolean superIsNotColliding();
	public void superSetMaxHealth(Object floatOrInt);
	public String superGetCachedUniqueIdString();

}
